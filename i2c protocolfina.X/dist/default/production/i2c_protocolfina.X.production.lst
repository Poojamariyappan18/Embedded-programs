

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Sep 26 15:59:36 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0013                     _SSPBUF	set	19
   117  0014                     _SSPCON	set	20
   118  0008                     _PORTD	set	8
   119  0063                     _SSPIF	set	99
   120  003A                     _RC2	set	58
   121  0039                     _RC1	set	57
   122  0038                     _RC0	set	56
   123  0086                     _TRISB	set	134
   124  0088                     _TRISD	set	136
   125  0094                     _SSPSTAT	set	148
   126  0093                     _SSPADD	set	147
   127  043A                     _TRISC2	set	1082
   128  0439                     _TRISC1	set	1081
   129  0438                     _TRISC0	set	1080
   130  043C                     _TRISC4	set	1084
   131  043B                     _TRISC3	set	1083
   132  048A                     _PEN	set	1162
   133  048B                     _RCEN	set	1163
   134  0488                     _SEN	set	1160
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  07FC                     start_initialization:	
   140  07FC                     __initialization:	
   141  07FC                     end_of_initialization:	
   142                           ;End of C runtime variable initialization code
   143                           
   144  07FC                     __end_of__initialization:	
   145  07FC  0183               	clrf	3
   146  07FD  120A  118A  2E88   	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	cstackCOMMON
   149  0070                     __pcstackCOMMON:	
   150  0070                     ?_delay:	
   151  0070                     ??_delay:	
   152                           ; 1 bytes @ 0x0
   153                           
   154  0070                     ?_cmmd:	
   155                           ; 1 bytes @ 0x0
   156                           
   157  0070                     ?_I2C_Init:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  0070                     ??_I2C_Init:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_I2C_Start:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ??_I2C_Start:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_I2C_Write:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ??_I2C_Write:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ?_I2C_Read:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ??_I2C_Read:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_I2C_Stop:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ??_I2C_Stop:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?_main:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?___awdiv:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?___awmod:	
   194                           ; 2 bytes @ 0x0
   195                           
   196  0070                     I2C_Write@data:	
   197                           ; 2 bytes @ 0x0
   198                           
   199  0070                     delay@i:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ___awdiv@divisor:	
   203                           ; 2 bytes @ 0x0
   204                           
   205  0070                     ___awmod@divisor:	
   206                           ; 2 bytes @ 0x0
   207                           
   208                           
   209                           ; 2 bytes @ 0x0
   210  0070                     	ds	2
   211  0072                     ?_cmd:	
   212  0072                     ?_dat:	
   213                           ; 1 bytes @ 0x2
   214                           
   215  0072                     cmd@x:	
   216                           ; 1 bytes @ 0x2
   217                           
   218  0072                     dat@y:	
   219                           ; 2 bytes @ 0x2
   220                           
   221  0072                     ___awdiv@dividend:	
   222                           ; 2 bytes @ 0x2
   223                           
   224  0072                     ___awmod@dividend:	
   225                           ; 2 bytes @ 0x2
   226                           
   227                           
   228                           ; 2 bytes @ 0x2
   229  0072                     	ds	2
   230  0074                     ??_cmd:	
   231  0074                     ??_dat:	
   232                           ; 1 bytes @ 0x4
   233                           
   234  0074                     ??_cmmd:	
   235                           ; 1 bytes @ 0x4
   236                           
   237  0074                     ??___awdiv:	
   238                           ; 1 bytes @ 0x4
   239                           
   240  0074                     ??___awmod:	
   241                           ; 1 bytes @ 0x4
   242                           
   243                           
   244                           ; 1 bytes @ 0x4
   245  0074                     	ds	1
   246  0075                     ___awdiv@counter:	
   247  0075                     ___awmod@counter:	
   248                           ; 1 bytes @ 0x5
   249                           
   250                           
   251                           ; 1 bytes @ 0x5
   252  0075                     	ds	1
   253  0076                     ___awdiv@sign:	
   254  0076                     ___awmod@sign:	
   255                           ; 1 bytes @ 0x6
   256                           
   257                           
   258                           ; 1 bytes @ 0x6
   259  0076                     	ds	1
   260  0077                     ___awdiv@quotient:	
   261                           
   262                           ; 2 bytes @ 0x7
   263  0077                     	ds	2
   264  0079                     ?_fun:	
   265  0079                     fun@adc:	
   266                           ; 1 bytes @ 0x9
   267                           
   268                           
   269                           ; 2 bytes @ 0x9
   270  0079                     	ds	2
   271  007B                     ??_fun:	
   272  007B                     ??_main:	
   273                           ; 1 bytes @ 0xB
   274                           
   275                           
   276                           ; 1 bytes @ 0xB
   277  007B                     	ds	3
   278                           
   279                           	psect	cstackBANK0
   280  0020                     __pcstackBANK0:	
   281  0020                     fun@c:	
   282                           
   283                           ; 2 bytes @ 0x0
   284  0020                     	ds	2
   285  0022                     fun@e:	
   286                           
   287                           ; 2 bytes @ 0x2
   288  0022                     	ds	2
   289  0024                     fun@f:	
   290                           
   291                           ; 2 bytes @ 0x4
   292  0024                     	ds	2
   293  0026                     fun@g:	
   294                           
   295                           ; 2 bytes @ 0x6
   296  0026                     	ds	2
   297  0028                     fun@h:	
   298                           
   299                           ; 2 bytes @ 0x8
   300  0028                     	ds	2
   301  002A                     fun@i:	
   302                           
   303                           ; 2 bytes @ 0xA
   304  002A                     	ds	2
   305  002C                     fun@j:	
   306                           
   307                           ; 2 bytes @ 0xC
   308  002C                     	ds	2
   309  002E                     fun@k:	
   310                           
   311                           ; 2 bytes @ 0xE
   312  002E                     	ds	2
   313  0030                     fun@a:	
   314                           
   315                           ; 2 bytes @ 0x10
   316  0030                     	ds	2
   317  0032                     fun@b:	
   318                           
   319                           ; 2 bytes @ 0x12
   320  0032                     	ds	2
   321  0034                     fun@d:	
   322                           
   323                           ; 2 bytes @ 0x14
   324  0034                     	ds	2
   325  0036                     main@result:	
   326                           
   327                           ; 2 bytes @ 0x16
   328  0036                     	ds	2
   329                           
   330                           	psect	maintext
   331  0688                     __pmaintext:	
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 118 in file "ir2cprotocolfinal.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  result          2   22[BANK0 ] unsigned int 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       2       0       0       0
   353 ;;      Temps:          3       0       0       0       0
   354 ;;      Totals:         3       2       0       0       0
   355 ;;Total ram usage:        5 bytes
   356 ;; Hardware stack levels required when called:    4
   357 ;; This function calls:
   358 ;;		_I2C_Init
   359 ;;		_I2C_Read
   360 ;;		_I2C_Start
   361 ;;		_I2C_Stop
   362 ;;		_I2C_Write
   363 ;;		_fun
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  0688                     _main:	
   372                           
   373                           ;ir2cprotocolfinal.c: 119: uint16_t result;
   374                           ;ir2cprotocolfinal.c: 121: TRISC3 = 1;
   375                           
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   378  0688  1683               	bsf	3,5	;RP0=1, select bank1
   379  0689  1303               	bcf	3,6	;RP1=0, select bank1
   380  068A  1587               	bsf	7,3	;volatile
   381                           
   382                           ;ir2cprotocolfinal.c: 122: TRISC4 = 1;
   383  068B  1607               	bsf	7,4	;volatile
   384                           
   385                           ;ir2cprotocolfinal.c: 123: TRISD=0x00;
   386  068C  0188               	clrf	8	;volatile
   387                           
   388                           ;ir2cprotocolfinal.c: 124: TRISB=0x00;
   389  068D  0186               	clrf	6	;volatile
   390                           
   391                           ;ir2cprotocolfinal.c: 125: TRISC0=0;
   392  068E  1007               	bcf	7,0	;volatile
   393                           
   394                           ;ir2cprotocolfinal.c: 126: TRISC1=0;
   395  068F  1087               	bcf	7,1	;volatile
   396                           
   397                           ;ir2cprotocolfinal.c: 127: TRISC2=0;
   398  0690  1107               	bcf	7,2	;volatile
   399                           
   400                           ;ir2cprotocolfinal.c: 129: I2C_Init();
   401  0691  120A  118A  257E  120A  118A  	fcall	_I2C_Init
   402  0696                     l944:	
   403                           ;ir2cprotocolfinal.c: 131: while (1) {
   404                           
   405                           
   406                           ;ir2cprotocolfinal.c: 133: I2C_Start();
   407  0696  120A  118A  2560  120A  118A  	fcall	_I2C_Start
   408                           
   409                           ;ir2cprotocolfinal.c: 136: I2C_Write(0x48<<1 );
   410  069B  3090               	movlw	144
   411  069C  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   412                           
   413                           ;ir2cprotocolfinal.c: 137: I2C_Write(0x01);
   414  06A1  3001               	movlw	1
   415  06A2  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   416                           
   417                           ;ir2cprotocolfinal.c: 138: I2C_Write(0xC3);
   418  06A7  30C3               	movlw	195
   419  06A8  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   420                           
   421                           ;ir2cprotocolfinal.c: 144: _delay((unsigned long)((100)*(20000000/4000.0)));
   422  06AD  3003               	movlw	3
   423  06AE  00FD               	movwf	??_main+2
   424  06AF  308A               	movlw	138
   425  06B0  00FC               	movwf	??_main+1
   426  06B1  3055               	movlw	85
   427  06B2  00FB               	movwf	??_main
   428  06B3                     u517:	
   429  06B3  0BFB               	decfsz	??_main,f
   430  06B4  2EB3               	goto	u517
   431  06B5  0BFC               	decfsz	??_main+1,f
   432  06B6  2EB3               	goto	u517
   433  06B7  0BFD               	decfsz	??_main+2,f
   434  06B8  2EB3               	goto	u517
   435  06B9  2EBA               	nop2
   436                           
   437                           ;ir2cprotocolfinal.c: 147: I2C_Start();
   438  06BA  120A  118A  2560  120A  118A  	fcall	_I2C_Start
   439                           
   440                           ;ir2cprotocolfinal.c: 150: I2C_Write(0x48<<1 );
   441  06BF  3090               	movlw	144
   442  06C0  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   443                           
   444                           ;ir2cprotocolfinal.c: 151: _delay((unsigned long)((100)*(20000000/4000.0)));
   445  06C5  3003               	movlw	3
   446  06C6  00FD               	movwf	??_main+2
   447  06C7  308A               	movlw	138
   448  06C8  00FC               	movwf	??_main+1
   449  06C9  3055               	movlw	85
   450  06CA  00FB               	movwf	??_main
   451  06CB                     u527:	
   452  06CB  0BFB               	decfsz	??_main,f
   453  06CC  2ECB               	goto	u527
   454  06CD  0BFC               	decfsz	??_main+1,f
   455  06CE  2ECB               	goto	u527
   456  06CF  0BFD               	decfsz	??_main+2,f
   457  06D0  2ECB               	goto	u527
   458  06D1  2ED2               	nop2
   459                           
   460                           ;ir2cprotocolfinal.c: 152: I2C_Write(0x00);
   461  06D2  3000               	movlw	0
   462  06D3  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   463                           
   464                           ;ir2cprotocolfinal.c: 153: _delay((unsigned long)((100)*(20000000/4000.0)));
   465  06D8  3003               	movlw	3
   466  06D9  00FD               	movwf	??_main+2
   467  06DA  308A               	movlw	138
   468  06DB  00FC               	movwf	??_main+1
   469  06DC  3055               	movlw	85
   470  06DD  00FB               	movwf	??_main
   471  06DE                     u537:	
   472  06DE  0BFB               	decfsz	??_main,f
   473  06DF  2EDE               	goto	u537
   474  06E0  0BFC               	decfsz	??_main+1,f
   475  06E1  2EDE               	goto	u537
   476  06E2  0BFD               	decfsz	??_main+2,f
   477  06E3  2EDE               	goto	u537
   478  06E4  2EE5               	nop2
   479                           
   480                           ;ir2cprotocolfinal.c: 155: I2C_Start();
   481  06E5  120A  118A  2560  120A  118A  	fcall	_I2C_Start
   482                           
   483                           ;ir2cprotocolfinal.c: 157: I2C_Write((0x48<<1 ) | 0x01);
   484  06EA  3091               	movlw	145
   485  06EB  120A  118A  2575  120A  118A  	fcall	_I2C_Write
   486                           
   487                           ;ir2cprotocolfinal.c: 158: _delay((unsigned long)((100)*(20000000/4000.0)));
   488  06F0  3003               	movlw	3
   489  06F1  00FD               	movwf	??_main+2
   490  06F2  308A               	movlw	138
   491  06F3  00FC               	movwf	??_main+1
   492  06F4  3055               	movlw	85
   493  06F5  00FB               	movwf	??_main
   494  06F6                     u547:	
   495  06F6  0BFB               	decfsz	??_main,f
   496  06F7  2EF6               	goto	u547
   497  06F8  0BFC               	decfsz	??_main+1,f
   498  06F9  2EF6               	goto	u547
   499  06FA  0BFD               	decfsz	??_main+2,f
   500  06FB  2EF6               	goto	u547
   501  06FC  2EFD               	nop2
   502                           
   503                           ;ir2cprotocolfinal.c: 159: I2C_Read();
   504  06FD  120A  118A  256C  120A  118A  	fcall	_I2C_Read
   505                           
   506                           ;ir2cprotocolfinal.c: 160: result = I2C_Read();
   507  0702  120A  118A  256C  120A  118A  	fcall	_I2C_Read
   508  0707  00FB               	movwf	??_main
   509  0708  01FC               	clrf	??_main+1
   510  0709  087B               	movf	??_main,w
   511  070A  1283               	bcf	3,5	;RP0=0, select bank0
   512  070B  1303               	bcf	3,6	;RP1=0, select bank0
   513  070C  00B6               	movwf	main@result
   514  070D  087C               	movf	??_main+1,w
   515  070E  00B7               	movwf	main@result+1
   516                           
   517                           ;ir2cprotocolfinal.c: 163: fun(result);
   518  070F  0837               	movf	main@result+1,w
   519  0710  00FA               	movwf	fun@adc+1
   520  0711  0836               	movf	main@result,w
   521  0712  00F9               	movwf	fun@adc
   522  0713  120A  118A  2736  120A  118A  	fcall	_fun
   523                           
   524                           ;ir2cprotocolfinal.c: 165: I2C_Stop();
   525  0718  120A  118A  2566  120A  118A  	fcall	_I2C_Stop
   526                           
   527                           ;ir2cprotocolfinal.c: 169: fun(result);
   528  071D  1283               	bcf	3,5	;RP0=0, select bank0
   529  071E  1303               	bcf	3,6	;RP1=0, select bank0
   530  071F  0837               	movf	main@result+1,w
   531  0720  00FA               	movwf	fun@adc+1
   532  0721  0836               	movf	main@result,w
   533  0722  00F9               	movwf	fun@adc
   534  0723  120A  118A  2736  120A  118A  	fcall	_fun
   535                           
   536                           ;ir2cprotocolfinal.c: 173: _delay((unsigned long)((1000)*(20000000/4000.0)));
   537  0728  301A               	movlw	26
   538  0729  00FD               	movwf	??_main+2
   539  072A  305E               	movlw	94
   540  072B  00FC               	movwf	??_main+1
   541  072C  306E               	movlw	110
   542  072D  00FB               	movwf	??_main
   543  072E                     u557:	
   544  072E  0BFB               	decfsz	??_main,f
   545  072F  2F2E               	goto	u557
   546  0730  0BFC               	decfsz	??_main+1,f
   547  0731  2F2E               	goto	u557
   548  0732  0BFD               	decfsz	??_main+2,f
   549  0733  2F2E               	goto	u557
   550  0734  0000               	nop
   551  0735  2E96               	goto	l944
   552  0736                     __end_of_main:	
   553                           
   554                           	psect	text1
   555  0736                     __ptext1:	
   556 ;; *************** function _fun *****************
   557 ;; Defined at:
   558 ;;		line 55 in file "ir2cprotocolfinal.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  adc             2    9[COMMON] unsigned int 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  d               2   20[BANK0 ] int 
   563 ;;  b               2   18[BANK0 ] int 
   564 ;;  a               2   16[BANK0 ] int 
   565 ;;  k               2   14[BANK0 ] int 
   566 ;;  j               2   12[BANK0 ] int 
   567 ;;  i               2   10[BANK0 ] int 
   568 ;;  h               2    8[BANK0 ] int 
   569 ;;  g               2    6[BANK0 ] int 
   570 ;;  f               2    4[BANK0 ] int 
   571 ;;  e               2    2[BANK0 ] int 
   572 ;;  c               2    0[BANK0 ] int 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         2       0       0       0       0
   583 ;;      Locals:         0      22       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         2      22       0       0       0
   586 ;;Total ram usage:       24 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    3
   589 ;; This function calls:
   590 ;;		___awdiv
   591 ;;		___awmod
   592 ;;		_cmmd
   593 ;;		_dat
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _fun
   601  0736                     _fun:	
   602                           
   603                           ;ir2cprotocolfinal.c: 58: cmmd();
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _fun: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   607  0736  120A  118A  25B8  120A  118A  	fcall	_cmmd
   608                           
   609                           ;ir2cprotocolfinal.c: 59: int a,b,c,d,e,f,g,h,i,j,k;
   610                           ;ir2cprotocolfinal.c: 62: a= adc;
   611  073B  087A               	movf	fun@adc+1,w
   612  073C  1283               	bcf	3,5	;RP0=0, select bank0
   613  073D  1303               	bcf	3,6	;RP1=0, select bank0
   614  073E  00B1               	movwf	fun@a+1
   615  073F  0879               	movf	fun@adc,w
   616  0740  00B0               	movwf	fun@a
   617                           
   618                           ;ir2cprotocolfinal.c: 64: b=a/10;
   619  0741  300A               	movlw	10
   620  0742  00F0               	movwf	___awdiv@divisor
   621  0743  3000               	movlw	0
   622  0744  00F1               	movwf	___awdiv@divisor+1
   623  0745  0831               	movf	fun@a+1,w
   624  0746  00F3               	movwf	___awdiv@dividend+1
   625  0747  0830               	movf	fun@a,w
   626  0748  00F2               	movwf	___awdiv@dividend
   627  0749  120A  118A  262F  120A  118A  	fcall	___awdiv
   628  074E  0871               	movf	?___awdiv+1,w
   629  074F  1283               	bcf	3,5	;RP0=0, select bank0
   630  0750  1303               	bcf	3,6	;RP1=0, select bank0
   631  0751  00B3               	movwf	fun@b+1
   632  0752  0870               	movf	?___awdiv,w
   633  0753  00B2               	movwf	fun@b
   634                           
   635                           ;ir2cprotocolfinal.c: 65: c=a%10;
   636  0754  300A               	movlw	10
   637  0755  00F0               	movwf	___awmod@divisor
   638  0756  3000               	movlw	0
   639  0757  00F1               	movwf	___awmod@divisor+1
   640  0758  0831               	movf	fun@a+1,w
   641  0759  00F3               	movwf	___awmod@dividend+1
   642  075A  0830               	movf	fun@a,w
   643  075B  00F2               	movwf	___awmod@dividend
   644  075C  120A  118A  25E4  120A  118A  	fcall	___awmod
   645  0761  0871               	movf	?___awmod+1,w
   646  0762  1283               	bcf	3,5	;RP0=0, select bank0
   647  0763  1303               	bcf	3,6	;RP1=0, select bank0
   648  0764  00A1               	movwf	fun@c+1
   649  0765  0870               	movf	?___awmod,w
   650  0766  00A0               	movwf	fun@c
   651                           
   652                           ;ir2cprotocolfinal.c: 67: d=b/10;
   653  0767  300A               	movlw	10
   654  0768  00F0               	movwf	___awdiv@divisor
   655  0769  3000               	movlw	0
   656  076A  00F1               	movwf	___awdiv@divisor+1
   657  076B  0833               	movf	fun@b+1,w
   658  076C  00F3               	movwf	___awdiv@dividend+1
   659  076D  0832               	movf	fun@b,w
   660  076E  00F2               	movwf	___awdiv@dividend
   661  076F  120A  118A  262F  120A  118A  	fcall	___awdiv
   662  0774  0871               	movf	?___awdiv+1,w
   663  0775  1283               	bcf	3,5	;RP0=0, select bank0
   664  0776  1303               	bcf	3,6	;RP1=0, select bank0
   665  0777  00B5               	movwf	fun@d+1
   666  0778  0870               	movf	?___awdiv,w
   667  0779  00B4               	movwf	fun@d
   668                           
   669                           ;ir2cprotocolfinal.c: 68: e=b%10;
   670  077A  300A               	movlw	10
   671  077B  00F0               	movwf	___awmod@divisor
   672  077C  3000               	movlw	0
   673  077D  00F1               	movwf	___awmod@divisor+1
   674  077E  0833               	movf	fun@b+1,w
   675  077F  00F3               	movwf	___awmod@dividend+1
   676  0780  0832               	movf	fun@b,w
   677  0781  00F2               	movwf	___awmod@dividend
   678  0782  120A  118A  25E4  120A  118A  	fcall	___awmod
   679  0787  0871               	movf	?___awmod+1,w
   680  0788  1283               	bcf	3,5	;RP0=0, select bank0
   681  0789  1303               	bcf	3,6	;RP1=0, select bank0
   682  078A  00A3               	movwf	fun@e+1
   683  078B  0870               	movf	?___awmod,w
   684  078C  00A2               	movwf	fun@e
   685                           
   686                           ;ir2cprotocolfinal.c: 70: f=d/10;
   687  078D  300A               	movlw	10
   688  078E  00F0               	movwf	___awdiv@divisor
   689  078F  3000               	movlw	0
   690  0790  00F1               	movwf	___awdiv@divisor+1
   691  0791  0835               	movf	fun@d+1,w
   692  0792  00F3               	movwf	___awdiv@dividend+1
   693  0793  0834               	movf	fun@d,w
   694  0794  00F2               	movwf	___awdiv@dividend
   695  0795  120A  118A  262F  120A  118A  	fcall	___awdiv
   696  079A  0871               	movf	?___awdiv+1,w
   697  079B  1283               	bcf	3,5	;RP0=0, select bank0
   698  079C  1303               	bcf	3,6	;RP1=0, select bank0
   699  079D  00A5               	movwf	fun@f+1
   700  079E  0870               	movf	?___awdiv,w
   701  079F  00A4               	movwf	fun@f
   702                           
   703                           ;ir2cprotocolfinal.c: 71: g=d%10;
   704  07A0  300A               	movlw	10
   705  07A1  00F0               	movwf	___awmod@divisor
   706  07A2  3000               	movlw	0
   707  07A3  00F1               	movwf	___awmod@divisor+1
   708  07A4  0835               	movf	fun@d+1,w
   709  07A5  00F3               	movwf	___awmod@dividend+1
   710  07A6  0834               	movf	fun@d,w
   711  07A7  00F2               	movwf	___awmod@dividend
   712  07A8  120A  118A  25E4  120A  118A  	fcall	___awmod
   713  07AD  0871               	movf	?___awmod+1,w
   714  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   715  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   716  07B0  00A7               	movwf	fun@g+1
   717  07B1  0870               	movf	?___awmod,w
   718  07B2  00A6               	movwf	fun@g
   719                           
   720                           ;ir2cprotocolfinal.c: 73: h=f+(0x30);
   721  07B3  0824               	movf	fun@f,w
   722  07B4  3E30               	addlw	48
   723  07B5  00A8               	movwf	fun@h
   724  07B6  0825               	movf	fun@f+1,w
   725  07B7  1803               	skipnc
   726  07B8  3E01               	addlw	1
   727  07B9  3E00               	addlw	0
   728  07BA  00A9               	movwf	fun@h+1
   729                           
   730                           ;ir2cprotocolfinal.c: 74: dat(h);
   731  07BB  0829               	movf	fun@h+1,w
   732  07BC  00F3               	movwf	dat@y+1
   733  07BD  0828               	movf	fun@h,w
   734  07BE  00F2               	movwf	dat@y
   735  07BF  120A  118A  2596  120A  118A  	fcall	_dat
   736                           
   737                           ;ir2cprotocolfinal.c: 75: i=g+(0x30);
   738  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   739  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   740  07C6  0826               	movf	fun@g,w
   741  07C7  3E30               	addlw	48
   742  07C8  00AA               	movwf	fun@i
   743  07C9  0827               	movf	fun@g+1,w
   744  07CA  1803               	skipnc
   745  07CB  3E01               	addlw	1
   746  07CC  3E00               	addlw	0
   747  07CD  00AB               	movwf	fun@i+1
   748                           
   749                           ;ir2cprotocolfinal.c: 76: dat(i);
   750  07CE  082B               	movf	fun@i+1,w
   751  07CF  00F3               	movwf	dat@y+1
   752  07D0  082A               	movf	fun@i,w
   753  07D1  00F2               	movwf	dat@y
   754  07D2  120A  118A  2596  120A  118A  	fcall	_dat
   755                           
   756                           ;ir2cprotocolfinal.c: 77: j=e+(0x30);
   757  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   758  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   759  07D9  0822               	movf	fun@e,w
   760  07DA  3E30               	addlw	48
   761  07DB  00AC               	movwf	fun@j
   762  07DC  0823               	movf	fun@e+1,w
   763  07DD  1803               	skipnc
   764  07DE  3E01               	addlw	1
   765  07DF  3E00               	addlw	0
   766  07E0  00AD               	movwf	fun@j+1
   767                           
   768                           ;ir2cprotocolfinal.c: 78: dat(j);
   769  07E1  082D               	movf	fun@j+1,w
   770  07E2  00F3               	movwf	dat@y+1
   771  07E3  082C               	movf	fun@j,w
   772  07E4  00F2               	movwf	dat@y
   773  07E5  120A  118A  2596  120A  118A  	fcall	_dat
   774                           
   775                           ;ir2cprotocolfinal.c: 79: k=c+(0x30);
   776  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   777  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   778  07EC  0820               	movf	fun@c,w
   779  07ED  3E30               	addlw	48
   780  07EE  00AE               	movwf	fun@k
   781  07EF  0821               	movf	fun@c+1,w
   782  07F0  1803               	skipnc
   783  07F1  3E01               	addlw	1
   784  07F2  3E00               	addlw	0
   785  07F3  00AF               	movwf	fun@k+1
   786                           
   787                           ;ir2cprotocolfinal.c: 80: dat(k);
   788  07F4  082F               	movf	fun@k+1,w
   789  07F5  00F3               	movwf	dat@y+1
   790  07F6  082E               	movf	fun@k,w
   791  07F7  00F2               	movwf	dat@y
   792  07F8  120A  118A  2596   	fcall	_dat
   793  07FB  0008               	return
   794  07FC                     __end_of_fun:	
   795                           
   796                           	psect	text2
   797  0596                     __ptext2:	
   798 ;; *************** function _dat *****************
   799 ;; Defined at:
   800 ;;		line 38 in file "ir2cprotocolfinal.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  y               2    2[COMMON] unsigned int 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         2       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0
   817 ;;      Totals:         2       0       0       0       0
   818 ;;Total ram usage:        2 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    1
   821 ;; This function calls:
   822 ;;		_delay
   823 ;; This function is called by:
   824 ;;		_fun
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _dat
   830  0596                     _dat:	
   831                           
   832                           ;ir2cprotocolfinal.c: 40: PORTD=y;
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _dat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   836  0596  0872               	movf	dat@y,w
   837  0597  1283               	bcf	3,5	;RP0=0, select bank0
   838  0598  1303               	bcf	3,6	;RP1=0, select bank0
   839  0599  0088               	movwf	8	;volatile
   840                           
   841                           ;ir2cprotocolfinal.c: 41: RC0=1;
   842  059A  1407               	bsf	7,0	;volatile
   843                           
   844                           ;ir2cprotocolfinal.c: 42: RC1=0;
   845  059B  1087               	bcf	7,1	;volatile
   846                           
   847                           ;ir2cprotocolfinal.c: 43: RC2=1;
   848  059C  1507               	bsf	7,2	;volatile
   849                           
   850                           ;ir2cprotocolfinal.c: 44: delay();
   851  059D  120A  118A  25A4   	fcall	_delay
   852                           
   853                           ;ir2cprotocolfinal.c: 45: RC2=0;
   854  05A0  1283               	bcf	3,5	;RP0=0, select bank0
   855  05A1  1303               	bcf	3,6	;RP1=0, select bank0
   856  05A2  1107               	bcf	7,2	;volatile
   857  05A3  0008               	return
   858  05A4                     __end_of_dat:	
   859                           
   860                           	psect	text3
   861  05B8                     __ptext3:	
   862 ;; *************** function _cmmd *****************
   863 ;; Defined at:
   864 ;;		line 47 in file "ir2cprotocolfinal.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    2
   885 ;; This function calls:
   886 ;;		_cmd
   887 ;; This function is called by:
   888 ;;		_fun
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _cmmd
   894  05B8                     _cmmd:	
   895                           
   896                           ;ir2cprotocolfinal.c: 49: cmd(0x38);
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _cmmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   900  05B8  3038               	movlw	56
   901  05B9  00F2               	movwf	cmd@x
   902  05BA  3000               	movlw	0
   903  05BB  00F3               	movwf	cmd@x+1
   904  05BC  120A  118A  2588  120A  118A  	fcall	_cmd
   905                           
   906                           ;ir2cprotocolfinal.c: 50: cmd(0x0c);
   907  05C1  300C               	movlw	12
   908  05C2  00F2               	movwf	cmd@x
   909  05C3  3000               	movlw	0
   910  05C4  00F3               	movwf	cmd@x+1
   911  05C5  120A  118A  2588  120A  118A  	fcall	_cmd
   912                           
   913                           ;ir2cprotocolfinal.c: 51: cmd(0x06);
   914  05CA  3006               	movlw	6
   915  05CB  00F2               	movwf	cmd@x
   916  05CC  3000               	movlw	0
   917  05CD  00F3               	movwf	cmd@x+1
   918  05CE  120A  118A  2588  120A  118A  	fcall	_cmd
   919                           
   920                           ;ir2cprotocolfinal.c: 52: cmd(0x01);
   921  05D3  3001               	movlw	1
   922  05D4  00F2               	movwf	cmd@x
   923  05D5  3000               	movlw	0
   924  05D6  00F3               	movwf	cmd@x+1
   925  05D7  120A  118A  2588  120A  118A  	fcall	_cmd
   926                           
   927                           ;ir2cprotocolfinal.c: 53: cmd(0x80);
   928  05DC  3080               	movlw	128
   929  05DD  00F2               	movwf	cmd@x
   930  05DE  3000               	movlw	0
   931  05DF  00F3               	movwf	cmd@x+1
   932  05E0  120A  118A  2588   	fcall	_cmd
   933  05E3  0008               	return
   934  05E4                     __end_of_cmmd:	
   935                           
   936                           	psect	text4
   937  0588                     __ptext4:	
   938 ;; *************** function _cmd *****************
   939 ;; Defined at:
   940 ;;		line 29 in file "ir2cprotocolfinal.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  x               2    2[COMMON] unsigned int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         2       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         2       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		_delay
   963 ;; This function is called by:
   964 ;;		_cmmd
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _cmd
   970  0588                     _cmd:	
   971                           
   972                           ;ir2cprotocolfinal.c: 31: PORTD=x;
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   976  0588  0872               	movf	cmd@x,w
   977  0589  1283               	bcf	3,5	;RP0=0, select bank0
   978  058A  1303               	bcf	3,6	;RP1=0, select bank0
   979  058B  0088               	movwf	8	;volatile
   980                           
   981                           ;ir2cprotocolfinal.c: 32: RC0=0;
   982  058C  1007               	bcf	7,0	;volatile
   983                           
   984                           ;ir2cprotocolfinal.c: 33: RC1=0;
   985  058D  1087               	bcf	7,1	;volatile
   986                           
   987                           ;ir2cprotocolfinal.c: 34: RC2=1;
   988  058E  1507               	bsf	7,2	;volatile
   989                           
   990                           ;ir2cprotocolfinal.c: 35: delay();
   991  058F  120A  118A  25A4   	fcall	_delay
   992                           
   993                           ;ir2cprotocolfinal.c: 36: RC2=0;
   994  0592  1283               	bcf	3,5	;RP0=0, select bank0
   995  0593  1303               	bcf	3,6	;RP1=0, select bank0
   996  0594  1107               	bcf	7,2	;volatile
   997  0595  0008               	return
   998  0596                     __end_of_cmd:	
   999                           
  1000                           	psect	text5
  1001  05A4                     __ptext5:	
  1002 ;; *************** function _delay *****************
  1003 ;; Defined at:
  1004 ;;		line 24 in file "ir2cprotocolfinal.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  i               2    0[COMMON] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, btemp+1
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         2       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         2       0       0       0       0
  1022 ;;Total ram usage:        2 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_cmd
  1028 ;;		_dat
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _delay
  1034  05A4                     _delay:	
  1035                           
  1036                           ;ir2cprotocolfinal.c: 26: int i;
  1037                           ;ir2cprotocolfinal.c: 27: for(i=0;i<1000;i++);
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1041  05A4  01F0               	clrf	delay@i
  1042  05A5  01F1               	clrf	delay@i+1
  1043  05A6                     L1:	
  1044  05A6  0871               	movf	delay@i+1,w
  1045  05A7  3A80               	xorlw	128
  1046  05A8  00FF               	movwf	127
  1047  05A9  3083               	movlw	131
  1048  05AA  027F               	subwf	127,w
  1049  05AB  1D03               	skipz
  1050  05AC  2DAF               	goto	u265
  1051  05AD  30E8               	movlw	232
  1052  05AE  0270               	subwf	delay@i,w
  1053  05AF                     u265:	
  1054  05AF  1803               	btfsc	3,0
  1055  05B0  0008               	return
  1056  05B1  3001               	movlw	1
  1057  05B2  07F0               	addwf	delay@i,f
  1058  05B3  1803               	skipnc
  1059  05B4  0AF1               	incf	delay@i+1,f
  1060  05B5  3000               	movlw	0
  1061  05B6  07F1               	addwf	delay@i+1,f
  1062  05B7  2DA6               	goto	L1
  1063  05B8                     __end_of_delay:	
  1064                           
  1065                           	psect	text6
  1066  05E4                     __ptext6:	
  1067 ;; *************** function ___awmod *****************
  1068 ;; Defined at:
  1069 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  divisor         2    0[COMMON] int 
  1072 ;;  dividend        2    2[COMMON] int 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  sign            1    6[COMMON] unsigned char 
  1075 ;;  counter         1    5[COMMON] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2    0[COMMON] int 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         4       0       0       0       0
  1086 ;;      Locals:         2       0       0       0       0
  1087 ;;      Temps:          1       0       0       0       0
  1088 ;;      Totals:         7       0       0       0       0
  1089 ;;Total ram usage:        7 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_fun
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function ___awmod
  1100  05E4                     ___awmod:	
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1104  05E4  01F6               	clrf	___awmod@sign
  1105  05E5  1FF3               	btfss	___awmod@dividend+1,7
  1106  05E6  2DEE               	goto	l854
  1107  05E7  09F2               	comf	___awmod@dividend,f
  1108  05E8  09F3               	comf	___awmod@dividend+1,f
  1109  05E9  0AF2               	incf	___awmod@dividend,f
  1110  05EA  1903               	skipnz
  1111  05EB  0AF3               	incf	___awmod@dividend+1,f
  1112  05EC  01F6               	clrf	___awmod@sign
  1113  05ED  0AF6               	incf	___awmod@sign,f
  1114  05EE                     l854:	
  1115  05EE  1FF1               	btfss	___awmod@divisor+1,7
  1116  05EF  2DF5               	goto	l858
  1117  05F0  09F0               	comf	___awmod@divisor,f
  1118  05F1  09F1               	comf	___awmod@divisor+1,f
  1119  05F2  0AF0               	incf	___awmod@divisor,f
  1120  05F3  1903               	skipnz
  1121  05F4  0AF1               	incf	___awmod@divisor+1,f
  1122  05F5                     l858:	
  1123  05F5  0870               	movf	___awmod@divisor,w
  1124  05F6  0471               	iorwf	___awmod@divisor+1,w
  1125  05F7  1903               	btfsc	3,2
  1126  05F8  2E22               	goto	l876
  1127  05F9  01F5               	clrf	___awmod@counter
  1128  05FA  0AF5               	incf	___awmod@counter,f
  1129  05FB                     l866:	
  1130  05FB  1BF1               	btfsc	___awmod@divisor+1,7
  1131  05FC  2E09               	goto	l868
  1132  05FD  3001               	movlw	1
  1133  05FE                     u415:	
  1134  05FE  1003               	clrc
  1135  05FF  0DF0               	rlf	___awmod@divisor,f
  1136  0600  0DF1               	rlf	___awmod@divisor+1,f
  1137  0601  3EFF               	addlw	-1
  1138  0602  1D03               	skipz
  1139  0603  2DFE               	goto	u415
  1140  0604  3001               	movlw	1
  1141  0605  00F4               	movwf	??___awmod
  1142  0606  0874               	movf	??___awmod,w
  1143  0607  07F5               	addwf	___awmod@counter,f
  1144  0608  2DFB               	goto	l866
  1145  0609                     l868:	
  1146  0609  0871               	movf	___awmod@divisor+1,w
  1147  060A  0273               	subwf	___awmod@dividend+1,w
  1148  060B  1D03               	skipz
  1149  060C  2E0F               	goto	u435
  1150  060D  0870               	movf	___awmod@divisor,w
  1151  060E  0272               	subwf	___awmod@dividend,w
  1152  060F                     u435:	
  1153  060F  1C03               	skipc
  1154  0610  2E17               	goto	l872
  1155  0611  0870               	movf	___awmod@divisor,w
  1156  0612  02F2               	subwf	___awmod@dividend,f
  1157  0613  0871               	movf	___awmod@divisor+1,w
  1158  0614  1C03               	skipc
  1159  0615  03F3               	decf	___awmod@dividend+1,f
  1160  0616  02F3               	subwf	___awmod@dividend+1,f
  1161  0617                     l872:	
  1162  0617  3001               	movlw	1
  1163  0618                     u445:	
  1164  0618  1003               	clrc
  1165  0619  0CF1               	rrf	___awmod@divisor+1,f
  1166  061A  0CF0               	rrf	___awmod@divisor,f
  1167  061B  3EFF               	addlw	-1
  1168  061C  1D03               	skipz
  1169  061D  2E18               	goto	u445
  1170  061E  3001               	movlw	1
  1171  061F  02F5               	subwf	___awmod@counter,f
  1172  0620  1D03               	btfss	3,2
  1173  0621  2E09               	goto	l868
  1174  0622                     l876:	
  1175  0622  0876               	movf	___awmod@sign,w
  1176  0623  1903               	btfsc	3,2
  1177  0624  2E2A               	goto	l880
  1178  0625  09F2               	comf	___awmod@dividend,f
  1179  0626  09F3               	comf	___awmod@dividend+1,f
  1180  0627  0AF2               	incf	___awmod@dividend,f
  1181  0628  1903               	skipnz
  1182  0629  0AF3               	incf	___awmod@dividend+1,f
  1183  062A                     l880:	
  1184  062A  0873               	movf	___awmod@dividend+1,w
  1185  062B  00F1               	movwf	?___awmod+1
  1186  062C  0872               	movf	___awmod@dividend,w
  1187  062D  00F0               	movwf	?___awmod
  1188  062E  0008               	return
  1189  062F                     __end_of___awmod:	
  1190                           
  1191                           	psect	text7
  1192  062F                     __ptext7:	
  1193 ;; *************** function ___awdiv *****************
  1194 ;; Defined at:
  1195 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  divisor         2    0[COMMON] int 
  1198 ;;  dividend        2    2[COMMON] int 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  quotient        2    7[COMMON] int 
  1201 ;;  sign            1    6[COMMON] unsigned char 
  1202 ;;  counter         1    5[COMMON] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    0[COMMON] int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         4       0       0       0       0
  1213 ;;      Locals:         4       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0
  1215 ;;      Totals:         9       0       0       0       0
  1216 ;;Total ram usage:        9 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_fun
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function ___awdiv
  1227  062F                     ___awdiv:	
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1231  062F  01F6               	clrf	___awdiv@sign
  1232  0630  1FF1               	btfss	___awdiv@divisor+1,7
  1233  0631  2E39               	goto	l810
  1234  0632  09F0               	comf	___awdiv@divisor,f
  1235  0633  09F1               	comf	___awdiv@divisor+1,f
  1236  0634  0AF0               	incf	___awdiv@divisor,f
  1237  0635  1903               	skipnz
  1238  0636  0AF1               	incf	___awdiv@divisor+1,f
  1239  0637  01F6               	clrf	___awdiv@sign
  1240  0638  0AF6               	incf	___awdiv@sign,f
  1241  0639                     l810:	
  1242  0639  1FF3               	btfss	___awdiv@dividend+1,7
  1243  063A  2E44               	goto	l816
  1244  063B  09F2               	comf	___awdiv@dividend,f
  1245  063C  09F3               	comf	___awdiv@dividend+1,f
  1246  063D  0AF2               	incf	___awdiv@dividend,f
  1247  063E  1903               	skipnz
  1248  063F  0AF3               	incf	___awdiv@dividend+1,f
  1249  0640  3001               	movlw	1
  1250  0641  00F4               	movwf	??___awdiv
  1251  0642  0874               	movf	??___awdiv,w
  1252  0643  06F6               	xorwf	___awdiv@sign,f
  1253  0644                     l816:	
  1254  0644  01F7               	clrf	___awdiv@quotient
  1255  0645  01F8               	clrf	___awdiv@quotient+1
  1256  0646  0870               	movf	___awdiv@divisor,w
  1257  0647  0471               	iorwf	___awdiv@divisor+1,w
  1258  0648  1903               	btfsc	3,2
  1259  0649  2E7B               	goto	l838
  1260  064A  01F5               	clrf	___awdiv@counter
  1261  064B  0AF5               	incf	___awdiv@counter,f
  1262  064C                     l826:	
  1263  064C  1BF1               	btfsc	___awdiv@divisor+1,7
  1264  064D  2E5A               	goto	l828
  1265  064E  3001               	movlw	1
  1266  064F                     u315:	
  1267  064F  1003               	clrc
  1268  0650  0DF0               	rlf	___awdiv@divisor,f
  1269  0651  0DF1               	rlf	___awdiv@divisor+1,f
  1270  0652  3EFF               	addlw	-1
  1271  0653  1D03               	skipz
  1272  0654  2E4F               	goto	u315
  1273  0655  3001               	movlw	1
  1274  0656  00F4               	movwf	??___awdiv
  1275  0657  0874               	movf	??___awdiv,w
  1276  0658  07F5               	addwf	___awdiv@counter,f
  1277  0659  2E4C               	goto	l826
  1278  065A                     l828:	
  1279  065A  3001               	movlw	1
  1280  065B                     u335:	
  1281  065B  1003               	clrc
  1282  065C  0DF7               	rlf	___awdiv@quotient,f
  1283  065D  0DF8               	rlf	___awdiv@quotient+1,f
  1284  065E  3EFF               	addlw	-1
  1285  065F  1D03               	skipz
  1286  0660  2E5B               	goto	u335
  1287  0661  0871               	movf	___awdiv@divisor+1,w
  1288  0662  0273               	subwf	___awdiv@dividend+1,w
  1289  0663  1D03               	skipz
  1290  0664  2E67               	goto	u345
  1291  0665  0870               	movf	___awdiv@divisor,w
  1292  0666  0272               	subwf	___awdiv@dividend,w
  1293  0667                     u345:	
  1294  0667  1C03               	skipc
  1295  0668  2E70               	goto	l834
  1296  0669  0870               	movf	___awdiv@divisor,w
  1297  066A  02F2               	subwf	___awdiv@dividend,f
  1298  066B  0871               	movf	___awdiv@divisor+1,w
  1299  066C  1C03               	skipc
  1300  066D  03F3               	decf	___awdiv@dividend+1,f
  1301  066E  02F3               	subwf	___awdiv@dividend+1,f
  1302  066F  1477               	bsf	___awdiv@quotient,0
  1303  0670                     l834:	
  1304  0670  3001               	movlw	1
  1305  0671                     u355:	
  1306  0671  1003               	clrc
  1307  0672  0CF1               	rrf	___awdiv@divisor+1,f
  1308  0673  0CF0               	rrf	___awdiv@divisor,f
  1309  0674  3EFF               	addlw	-1
  1310  0675  1D03               	skipz
  1311  0676  2E71               	goto	u355
  1312  0677  3001               	movlw	1
  1313  0678  02F5               	subwf	___awdiv@counter,f
  1314  0679  1D03               	btfss	3,2
  1315  067A  2E5A               	goto	l828
  1316  067B                     l838:	
  1317  067B  0876               	movf	___awdiv@sign,w
  1318  067C  1903               	btfsc	3,2
  1319  067D  2E83               	goto	l842
  1320  067E  09F7               	comf	___awdiv@quotient,f
  1321  067F  09F8               	comf	___awdiv@quotient+1,f
  1322  0680  0AF7               	incf	___awdiv@quotient,f
  1323  0681  1903               	skipnz
  1324  0682  0AF8               	incf	___awdiv@quotient+1,f
  1325  0683                     l842:	
  1326  0683  0878               	movf	___awdiv@quotient+1,w
  1327  0684  00F1               	movwf	?___awdiv+1
  1328  0685  0877               	movf	___awdiv@quotient,w
  1329  0686  00F0               	movwf	?___awdiv
  1330  0687  0008               	return
  1331  0688                     __end_of___awdiv:	
  1332                           
  1333                           	psect	text8
  1334  0575                     __ptext8:	
  1335 ;; *************** function _I2C_Write *****************
  1336 ;; Defined at:
  1337 ;;		line 98 in file "ir2cprotocolfinal.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  data            1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  data            1    0[COMMON] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         1       0       0       0       0
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _I2C_Write
  1366  0575                     _I2C_Write:	
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _I2C_Write: [wreg]
  1370                           ;I2C_Write@data stored from wreg
  1371  0575  00F0               	movwf	I2C_Write@data
  1372                           
  1373                           ;ir2cprotocolfinal.c: 99: SSPBUF = data;
  1374  0576  0870               	movf	I2C_Write@data,w
  1375  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0579  0093               	movwf	19	;volatile
  1378  057A                     l69:	
  1379                           ;ir2cprotocolfinal.c: 100: while (SSPIF == 0);
  1380                           
  1381  057A  1D8C               	btfss	12,3	;volatile
  1382  057B  2D7A               	goto	l69
  1383                           
  1384                           ;ir2cprotocolfinal.c: 101: SSPIF = 0;
  1385  057C  118C               	bcf	12,3	;volatile
  1386  057D  0008               	return
  1387  057E                     __end_of_I2C_Write:	
  1388                           
  1389                           	psect	text9
  1390  0566                     __ptext9:	
  1391 ;; *************** function _I2C_Stop *****************
  1392 ;; Defined at:
  1393 ;;		line 113 in file "ir2cprotocolfinal.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		None
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _I2C_Stop
  1422  0566                     _I2C_Stop:	
  1423                           
  1424                           ;ir2cprotocolfinal.c: 114: PEN = 1;
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _I2C_Stop: []
  1428  0566  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0567  1303               	bcf	3,6	;RP1=0, select bank1
  1430  0568  1511               	bsf	17,2	;volatile
  1431  0569                     l81:	
  1432                           ;ir2cprotocolfinal.c: 115: while (PEN);
  1433                           
  1434  0569  1D11               	btfss	17,2	;volatile
  1435  056A  0008               	return
  1436  056B  2D69               	goto	l81
  1437  056C                     __end_of_I2C_Stop:	
  1438                           
  1439                           	psect	text10
  1440  0560                     __ptext10:	
  1441 ;; *************** function _I2C_Start *****************
  1442 ;; Defined at:
  1443 ;;		line 92 in file "ir2cprotocolfinal.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		None
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _I2C_Start
  1472  0560                     _I2C_Start:	
  1473                           
  1474                           ;ir2cprotocolfinal.c: 93: SEN = 1;
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _I2C_Start: []
  1478  0560  1683               	bsf	3,5	;RP0=1, select bank1
  1479  0561  1303               	bcf	3,6	;RP1=0, select bank1
  1480  0562  1411               	bsf	17,0	;volatile
  1481  0563                     l63:	
  1482                           ;ir2cprotocolfinal.c: 94: while (SEN);
  1483                           
  1484  0563  1C11               	btfss	17,0	;volatile
  1485  0564  0008               	return
  1486  0565  2D63               	goto	l63
  1487  0566                     __end_of_I2C_Start:	
  1488                           
  1489                           	psect	text11
  1490  056C                     __ptext11:	
  1491 ;; *************** function _I2C_Read *****************
  1492 ;; Defined at:
  1493 ;;		line 105 in file "ir2cprotocolfinal.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _I2C_Read
  1522  056C                     _I2C_Read:	
  1523                           
  1524                           ;ir2cprotocolfinal.c: 106: RCEN = 1;
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _I2C_Read: [wreg]
  1528  056C  1683               	bsf	3,5	;RP0=1, select bank1
  1529  056D  1303               	bcf	3,6	;RP1=0, select bank1
  1530  056E  1591               	bsf	17,3	;volatile
  1531  056F                     l75:	
  1532                           ;ir2cprotocolfinal.c: 107: while (!SSPIF);
  1533                           
  1534  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0570  1D8C               	btfss	12,3	;volatile
  1536  0571  2D6F               	goto	l75
  1537                           
  1538                           ;ir2cprotocolfinal.c: 108: SSPIF = 0;
  1539  0572  118C               	bcf	12,3	;volatile
  1540                           
  1541                           ;ir2cprotocolfinal.c: 109: return SSPBUF;
  1542  0573  0813               	movf	19,w	;volatile
  1543  0574  0008               	return
  1544  0575                     __end_of_I2C_Read:	
  1545                           
  1546                           	psect	text12
  1547  057E                     __ptext12:	
  1548 ;; *************** function _I2C_Init *****************
  1549 ;; Defined at:
  1550 ;;		line 84 in file "ir2cprotocolfinal.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _I2C_Init
  1579  057E                     _I2C_Init:	
  1580                           
  1581                           ;ir2cprotocolfinal.c: 86: SSPCON = 0b00101000;
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _I2C_Init: [wreg+status,2]
  1585  057E  3028               	movlw	40
  1586  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0581  0094               	movwf	20	;volatile
  1589                           
  1590                           ;ir2cprotocolfinal.c: 87: SSPADD =0x09;
  1591  0582  3009               	movlw	9
  1592  0583  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0584  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0585  0093               	movwf	19	;volatile
  1595                           
  1596                           ;ir2cprotocolfinal.c: 88: SSPSTAT = 0;
  1597  0586  0194               	clrf	20	;volatile
  1598  0587  0008               	return
  1599  0588                     __end_of_I2C_Init:	
  1600  007E                     btemp	set	126	;btemp
  1601  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_fun
    _fun->___awdiv
    _dat->_delay
    _cmmd->_cmd
    _cmd->_delay

Critical Paths under _main in BANK0

    _main->_fun

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2359
                                             11 COMMON     3     3      0
                                             22 BANK0      2     2      0
                           _I2C_Init
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                                _fun
 ---------------------------------------------------------------------------------
 (1) _fun                                                 24    22      2    2292
                                              9 COMMON     2     0      2
                                              0 BANK0     22    22      0
                            ___awdiv
                            ___awmod
                               _cmmd
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     0      2     280
                                              2 COMMON     2     0      2
                              _delay
 ---------------------------------------------------------------------------------
 (2) _cmmd                                                 0     0      0     333
                                _cmd
 ---------------------------------------------------------------------------------
 (3) _cmd                                                  2     0      2     333
                                              2 COMMON     2     0      2
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     614
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     618
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _fun
     ___awdiv
     ___awmod
     _cmmd
       _cmd
         _delay
     _dat
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Sep 26 15:59:36 2023

     __size_of_I2C_Start 0006              __CFG_CP$OFF 0000       __size_of_I2C_Write 0009  
                     l63 0563                       l81 0569                       l75 056F  
                     l69 057A             ___awdiv@sign 0076              __CFG_LVP$ON 0000  
                    l810 0639                      l816 0644                      l842 0683  
                    l834 0670                      l826 064C                      l828 065A  
                    l838 067B                      l854 05EE                      l880 062A  
                    l872 0617                      l944 0696                      l866 05FB  
                    l858 05F5                      l868 0609                      l876 0622  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    u315 064F                      u335 065B                      u415 05FE  
                    _PEN 048A                      u345 0667                      u265 05AF  
           __CFG_CPD$OFF 0000                      u355 0671                      u435 060F  
                    u445 0618                      u517 06B3                      u527 06CB  
                    u537 06DE                      u547 06F6                      _SEN 0488  
                    u557 072E                      _dat 0596                      _cmd 0588  
                    _fun 0736             ___awmod@sign 0076             __CFG_FOSC$HS 0000  
                   ?_dat 0072                     ?_cmd 0072                     ?_fun 0079  
                   _RCEN 048B             __CFG_WRT$OFF 0000                     _cmmd 05B8  
                   dat@y 0072                     _main 0688                     cmd@x 0072  
       __end_of_I2C_Init 0588         __end_of_I2C_Read 0575                     btemp 007E  
                   fun@a 0030                     fun@b 0032                     fun@c 0020  
                   fun@d 0034                     fun@e 0022                     fun@f 0024  
                   fun@g 0026                     fun@h 0028                     fun@i 002A  
                   fun@j 002C                     fun@k 002E         __end_of_I2C_Stop 056C  
          __CFG_BOREN$ON 0000                     start 0000                    ??_dat 0074  
                  ??_cmd 0074                    ??_fun 007B                    ?_cmmd 0070  
                  ?_main 0070          __end_of___awdiv 0688            __CFG_WDTE$OFF 0000  
        __end_of___awmod 062F          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _delay 05A4        __end_of_I2C_Start 0566  
      __end_of_I2C_Write 057E                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_cmmd 05E4             __end_of_main 0736  
                 ??_cmmd 0074                   ??_main 007B                   ?_delay 0070  
       ___awdiv@dividend 0072                   _SSPADD 0093                   _TRISC0 0438  
                 _TRISC1 0439                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
         __CFG_PWRTE$OFF 0000                ??___awdiv 0074                ??___awmod 0074  
                 delay@i 0070         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   fun@adc 0079                ?_I2C_Init 0070  
              ?_I2C_Read 0070                ?_I2C_Stop 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 05B8               ??_I2C_Init 0070  
             ??_I2C_Read 0070               ??_I2C_Stop 0070                  ??_delay 0070  
             __pmaintext 0688                  _SSPSTAT 0094                _I2C_Start 0560  
              _I2C_Write 0575                  ___awdiv 062F                  ___awmod 05E4  
                __ptext1 0736                  __ptext2 0596                  __ptext3 05B8  
                __ptext4 0588                  __ptext5 05A4                  __ptext6 05E4  
                __ptext7 062F                  __ptext8 0575                  __ptext9 0566  
           __size_of_dat 000E             __size_of_cmd 000E             __size_of_fun 00C6  
       ___awmod@dividend 0072     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070        __size_of_I2C_Init 000A        __size_of_I2C_Read 0009  
      __size_of_I2C_Stop 0006               main@result 0036      start_initialization 07FC  
            __end_of_dat 05A4              __end_of_cmd 0596              __end_of_fun 07FC  
            ??_I2C_Start 0070              ??_I2C_Write 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
               _I2C_Init 057E                 _I2C_Read 056C                 _I2C_Stop 0566  
         __size_of_delay 0014            I2C_Write@data 0070         __size_of___awdiv 0059  
       __size_of___awmod 004B                 __ptext10 0560                 __ptext11 056C  
               __ptext12 057E            __size_of_cmmd 002C            __size_of_main 00AE  
