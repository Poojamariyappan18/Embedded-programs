

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Oct 09 12:36:47 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.41
    26                           ; Generated 25/01/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0013                     _SSPBUF	set	19
   120  0014                     _SSPCON	set	20
   121  0008                     _PORTD	set	8
   122  0063                     _SSPIF	set	99
   123  0032                     _RB2	set	50
   124  0031                     _RB1	set	49
   125  0030                     _RB0	set	48
   126  0093                     _SSPADD	set	147
   127  0086                     _TRISB	set	134
   128  0088                     _TRISD	set	136
   129  048C                     _ACKEN	set	1164
   130  048D                     _ACKDT	set	1165
   131  0489                     _RSEN	set	1161
   132  048A                     _PEN	set	1162
   133  0488                     _SEN	set	1160
   134  048B                     _RCEN	set	1163
   135  048E                     _ACKSTAT	set	1166
   136  043C                     _TRISC4	set	1084
   137  043B                     _TRISC3	set	1083
   138                           
   139                           	psect	strings
   140  0003                     __pstrings:	
   141  0003                     stringtab:	
   142  0003                     __stringtab:	
   143  0003                     stringcode:	
   144                           ;	String table - string pointers are 1 byte each
   145                           
   146  0003                     stringdir:	
   147  0003  3000               	movlw	high stringdir
   148  0004  008A               	movwf	10
   149  0005  0804               	movf	4,w
   150  0006  0A84               	incf	4,f
   151  0007  0782               	addwf	2,f
   152  0008                     __stringbase:	
   153  0008  3400               	retlw	0
   154  0009                     __end_of__stringtab:	
   155  0009                     STR_1:	
   156  0009  3454               	retlw	84	;'T'
   157  000A  3469               	retlw	105	;'i'
   158  000B  346D               	retlw	109	;'m'
   159  000C  3465               	retlw	101	;'e'
   160  000D  343A               	retlw	58	;':'
   161  000E  3400               	retlw	0
   162  000F                     STR_2:	
   163  000F  3444               	retlw	68	;'D'
   164  0010  3461               	retlw	97	;'a'
   165  0011  3474               	retlw	116	;'t'
   166  0012  3465               	retlw	101	;'e'
   167  0013  343A               	retlw	58	;':'
   168  0014  3400               	retlw	0
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  07F3                     start_initialization:	
   174  07F3                     __initialization:	
   175                           
   176                           ; Clear objects allocated to COMMON
   177  07F3  01F0               	clrf	__pbssCOMMON& (0+127)
   178  07F4  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   179  07F5  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   180  07F6  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   181  07F7  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   182  07F8  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   183  07F9  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   184  07FA  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   185  07FB  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   186  07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  07FC                     __end_of__initialization:	
   190  07FC  0183               	clrf	3
   191  07FD  120A  118A  2ED3   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0070                     __pbssCOMMON:	
   195  0070                     _i:	
   196  0070                     	ds	2
   197  0072                     _year:	
   198  0072                     	ds	1
   199  0073                     _month:	
   200  0073                     	ds	1
   201  0074                     _date:	
   202  0074                     	ds	1
   203  0075                     _day:	
   204  0075                     	ds	1
   205  0076                     _hour:	
   206  0076                     	ds	1
   207  0077                     _min:	
   208  0077                     	ds	1
   209  0078                     _sec:	
   210  0078                     	ds	1
   211                           
   212                           	psect	cstackCOMMON
   213  0079                     __pcstackCOMMON:	
   214  0079                     ?_cmd:	
   215  0079                     ??_cmd:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0079                     ?_rtc_int:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0079                     ??_rtc_int:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0079                     ?_rtc_read_byte:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0079                     ?_convup:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0079                     ??_convup:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0079                     ?_convd:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0079                     ??_convd:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0079                     ?_rtc_stop:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0079                     ??_rtc_stop:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0079                     ?_rtc_res:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0079                     ??_rtc_res:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0079                     ?_rtc_nak:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0079                     ??_rtc_nak:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0079                     ?_lcd_init:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0079                     ?_dat:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0079                     ??_dat:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0079                     ?_show:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0079                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0079                     ?_waitmssp:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0079                     ??_waitmssp:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0079                     ?_rtc_send:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0079                     ??_rtc_send:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0079                     ?_rtc_read:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0079                     ??_rtc_read:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0079                     cmd@a:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0079                     dat@b:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0079                     rtc_send@a:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0079                     convd@bcd:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0079                     	ds	1
   305  007A                     ??_rtc_read_byte:	
   306  007A                     ??_lcd_init:	
   307                           ; 1 bytes @ 0x1
   308                           
   309  007A                     ??_show:	
   310                           ; 1 bytes @ 0x1
   311                           
   312  007A                     convup@bcd:	
   313                           ; 1 bytes @ 0x1
   314                           
   315                           
   316                           ; 1 bytes @ 0x1
   317  007A                     	ds	1
   318  007B                     show@s:	
   319  007B                     rtc_read_byte@addr:	
   320                           ; 1 bytes @ 0x2
   321                           
   322                           
   323                           ; 1 bytes @ 0x2
   324  007B                     	ds	1
   325  007C                     rtc_read_byte@rec:	
   326                           
   327                           ; 1 bytes @ 0x3
   328  007C                     	ds	1
   329  007D                     ??_main:	
   330                           
   331                           ; 1 bytes @ 0x4
   332  007D                     	ds	1
   333                           
   334                           	psect	maintext
   335  06D3                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 24 in file "rtc.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0
   357 ;;      Temps:          1       0       0       0       0
   358 ;;      Totals:         1       0       0       0       0
   359 ;;Total ram usage:        1 bytes
   360 ;; Hardware stack levels required when called:    3
   361 ;; This function calls:
   362 ;;		_cmd
   363 ;;		_convd
   364 ;;		_convup
   365 ;;		_dat
   366 ;;		_lcd_init
   367 ;;		_rtc_int
   368 ;;		_rtc_read_byte
   369 ;;		_show
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  06D3                     _main:	
   378                           
   379                           ;rtc.c: 26: lcd_init();
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   383  06D3  120A  118A  2612  120A  118A  	fcall	_lcd_init
   384                           
   385                           ;rtc.c: 28: show("Time:");
   386  06D8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   387  06D9  120A  118A  262D  120A  118A  	fcall	_show
   388                           
   389                           ;rtc.c: 29: cmd(0xc0);
   390  06DE  30C0               	movlw	192
   391  06DF  120A  118A  2649  120A  118A  	fcall	_cmd
   392                           
   393                           ;rtc.c: 30: show("Date:");
   394  06E4  3007               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   395  06E5  120A  118A  262D  120A  118A  	fcall	_show
   396                           
   397                           ;rtc.c: 31: rtc_int();
   398  06EA  120A  118A  25FD  120A  118A  	fcall	_rtc_int
   399  06EF                     l816:	
   400                           ;rtc.c: 32: while(1) {
   401                           
   402                           
   403                           ;rtc.c: 33: sec =rtc_read_byte(0x00);
   404  06EF  3000               	movlw	0
   405  06F0  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   406  06F5  00FD               	movwf	??_main
   407  06F6  087D               	movf	??_main,w
   408  06F7  00F8               	movwf	_sec
   409                           
   410                           ;rtc.c: 34: min =rtc_read_byte(0x01);
   411  06F8  3001               	movlw	1
   412  06F9  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   413  06FE  00FD               	movwf	??_main
   414  06FF  087D               	movf	??_main,w
   415  0700  00F7               	movwf	_min
   416                           
   417                           ;rtc.c: 35: hour =rtc_read_byte(0x02);
   418  0701  3002               	movlw	2
   419  0702  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   420  0707  00FD               	movwf	??_main
   421  0708  087D               	movf	??_main,w
   422  0709  00F6               	movwf	_hour
   423                           
   424                           ;rtc.c: 36: day =rtc_read_byte(0x03);
   425  070A  3003               	movlw	3
   426  070B  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   427  0710  00FD               	movwf	??_main
   428  0711  087D               	movf	??_main,w
   429  0712  00F5               	movwf	_day
   430                           
   431                           ;rtc.c: 37: date =rtc_read_byte(0x04);
   432  0713  3004               	movlw	4
   433  0714  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   434  0719  00FD               	movwf	??_main
   435  071A  087D               	movf	??_main,w
   436  071B  00F4               	movwf	_date
   437                           
   438                           ;rtc.c: 38: month=rtc_read_byte(0x05);
   439  071C  3005               	movlw	5
   440  071D  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   441  0722  00FD               	movwf	??_main
   442  0723  087D               	movf	??_main,w
   443  0724  00F3               	movwf	_month
   444                           
   445                           ;rtc.c: 39: year =rtc_read_byte(0x06);
   446  0725  3006               	movlw	6
   447  0726  120A  118A  269D  120A  118A  	fcall	_rtc_read_byte
   448  072B  00FD               	movwf	??_main
   449  072C  087D               	movf	??_main,w
   450  072D  00F2               	movwf	_year
   451                           
   452                           ;rtc.c: 41: cmd(0x85);
   453  072E  3085               	movlw	133
   454  072F  120A  118A  2649  120A  118A  	fcall	_cmd
   455                           
   456                           ;rtc.c: 42: dat(convup(hour));
   457  0734  0876               	movf	_hour,w
   458  0735  120A  118A  25E2  120A  118A  	fcall	_convup
   459  073A  120A  118A  2673  120A  118A  	fcall	_dat
   460                           
   461                           ;rtc.c: 43: dat(convd(hour));
   462  073F  0876               	movf	_hour,w
   463  0740  120A  118A  25B7  120A  118A  	fcall	_convd
   464  0745  120A  118A  2673  120A  118A  	fcall	_dat
   465                           
   466                           ;rtc.c: 44: dat(':');
   467  074A  303A               	movlw	58
   468  074B  120A  118A  2673  120A  118A  	fcall	_dat
   469                           
   470                           ;rtc.c: 45: dat(convup(min));
   471  0750  0877               	movf	_min,w
   472  0751  120A  118A  25E2  120A  118A  	fcall	_convup
   473  0756  120A  118A  2673  120A  118A  	fcall	_dat
   474                           
   475                           ;rtc.c: 46: dat(convd(min));
   476  075B  0877               	movf	_min,w
   477  075C  120A  118A  25B7  120A  118A  	fcall	_convd
   478  0761  120A  118A  2673  120A  118A  	fcall	_dat
   479                           
   480                           ;rtc.c: 47: dat(':');
   481  0766  303A               	movlw	58
   482  0767  120A  118A  2673  120A  118A  	fcall	_dat
   483                           
   484                           ;rtc.c: 48: dat(convup(sec));
   485  076C  0878               	movf	_sec,w
   486  076D  120A  118A  25E2  120A  118A  	fcall	_convup
   487  0772  120A  118A  2673  120A  118A  	fcall	_dat
   488                           
   489                           ;rtc.c: 49: dat(convd(sec));
   490  0777  0878               	movf	_sec,w
   491  0778  120A  118A  25B7  120A  118A  	fcall	_convd
   492  077D  120A  118A  2673  120A  118A  	fcall	_dat
   493                           
   494                           ;rtc.c: 51: cmd(0xc5);
   495  0782  30C5               	movlw	197
   496  0783  120A  118A  2649  120A  118A  	fcall	_cmd
   497                           
   498                           ;rtc.c: 52: dat(convup(date));
   499  0788  0874               	movf	_date,w
   500  0789  120A  118A  25E2  120A  118A  	fcall	_convup
   501  078E  120A  118A  2673  120A  118A  	fcall	_dat
   502                           
   503                           ;rtc.c: 53: dat(convd(date));
   504  0793  0874               	movf	_date,w
   505  0794  120A  118A  25B7  120A  118A  	fcall	_convd
   506  0799  120A  118A  2673  120A  118A  	fcall	_dat
   507                           
   508                           ;rtc.c: 54: dat(':');
   509  079E  303A               	movlw	58
   510  079F  120A  118A  2673  120A  118A  	fcall	_dat
   511                           
   512                           ;rtc.c: 55: dat(convup(month));
   513  07A4  0873               	movf	_month,w
   514  07A5  120A  118A  25E2  120A  118A  	fcall	_convup
   515  07AA  120A  118A  2673  120A  118A  	fcall	_dat
   516                           
   517                           ;rtc.c: 56: dat(convd(month));
   518  07AF  0873               	movf	_month,w
   519  07B0  120A  118A  25B7  120A  118A  	fcall	_convd
   520  07B5  120A  118A  2673  120A  118A  	fcall	_dat
   521                           
   522                           ;rtc.c: 57: dat(':');
   523  07BA  303A               	movlw	58
   524  07BB  120A  118A  2673  120A  118A  	fcall	_dat
   525                           
   526                           ;rtc.c: 58: dat(convup(year));
   527  07C0  0872               	movf	_year,w
   528  07C1  120A  118A  25E2  120A  118A  	fcall	_convup
   529  07C6  120A  118A  2673  120A  118A  	fcall	_dat
   530                           
   531                           ;rtc.c: 59: dat(convd(year));
   532  07CB  0872               	movf	_year,w
   533  07CC  120A  118A  25B7  120A  118A  	fcall	_convd
   534  07D1  120A  118A  2673  120A  118A  	fcall	_dat
   535                           
   536                           ;rtc.c: 60: dat('/');
   537  07D6  302F               	movlw	47
   538  07D7  120A  118A  2673  120A  118A  	fcall	_dat
   539                           
   540                           ;rtc.c: 61: dat(convup(day));
   541  07DC  0875               	movf	_day,w
   542  07DD  120A  118A  25E2  120A  118A  	fcall	_convup
   543  07E2  120A  118A  2673  120A  118A  	fcall	_dat
   544                           
   545                           ;rtc.c: 62: dat(convd(day));
   546  07E7  0875               	movf	_day,w
   547  07E8  120A  118A  25B7  120A  118A  	fcall	_convd
   548  07ED  120A  118A  2673  120A  118A  	fcall	_dat
   549  07F2  2EEF               	goto	l816
   550  07F3                     __end_of_main:	
   551                           
   552                           	psect	text1
   553  062D                     __ptext1:	
   554 ;; *************** function _show *****************
   555 ;; Defined at:
   556 ;;		line 36 in file "lcd.h"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  s               1    wreg     PTR unsigned char 
   559 ;;		 -> STR_2(6), STR_1(6), 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  s               1    2[COMMON] PTR unsigned char 
   562 ;;		 -> STR_2(6), STR_1(6), 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         1       0       0       0       0
   574 ;;      Temps:          1       0       0       0       0
   575 ;;      Totals:         2       0       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    1
   579 ;; This function calls:
   580 ;;		_dat
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _show
   588  062D                     _show:	
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   592                           ;show@s stored from wreg
   593  062D  00FB               	movwf	show@s
   594  062E                     l806:	
   595                           ;lcd.h: 38: while(*s) {
   596                           
   597  062E  087B               	movf	show@s,w
   598  062F  0084               	movwf	4
   599  0630  120A  118A  2003  120A  118A  	fcall	stringdir
   600  0635  3A00               	xorlw	0
   601  0636  1903               	btfsc	3,2
   602  0637  0008               	return
   603                           
   604                           ;lcd.h: 39: dat(*s++);
   605  0638  087B               	movf	show@s,w
   606  0639  0084               	movwf	4
   607  063A  120A  118A  2003  120A  118A  	fcall	stringdir
   608  063F  120A  118A  2673  120A  118A  	fcall	_dat
   609  0644  3001               	movlw	1
   610  0645  00FA               	movwf	??_show
   611  0646  087A               	movf	??_show,w
   612  0647  07FB               	addwf	show@s,f
   613  0648  2E2E               	goto	l806
   614  0649                     __end_of_show:	
   615                           
   616                           	psect	text2
   617  0673                     __ptext2:	
   618 ;; *************** function _dat *****************
   619 ;; Defined at:
   620 ;;		line 27 in file "lcd.h"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  b               1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  b               1    0[COMMON] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, btemp+1
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         1       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         1       0       0       0       0
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_show
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _dat
   650  0673                     _dat:	
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in _dat: [wreg+status,2+btemp+1]
   654                           ;dat@b stored from wreg
   655  0673  00F9               	movwf	dat@b
   656                           
   657                           ;lcd.h: 29: PORTD=b;
   658  0674  0879               	movf	dat@b,w
   659  0675  1283               	bcf	3,5	;RP0=0, select bank0
   660  0676  1303               	bcf	3,6	;RP1=0, select bank0
   661  0677  0088               	movwf	8	;volatile
   662                           
   663                           ;lcd.h: 30: RB0=1;
   664  0678  1406               	bsf	6,0	;volatile
   665                           
   666                           ;lcd.h: 31: RB1=0;
   667  0679  1086               	bcf	6,1	;volatile
   668                           
   669                           ;lcd.h: 32: RB2=1;
   670  067A  1506               	bsf	6,2	;volatile
   671                           
   672                           ;lcd.h: 33: for(i=0;i<1000;i++);
   673  067B  01F0               	clrf	_i
   674  067C  01F1               	clrf	_i+1
   675  067D  0871               	movf	_i+1,w
   676  067E  3A80               	xorlw	128
   677  067F  00FF               	movwf	127
   678  0680  3083               	movlw	131
   679  0681  027F               	subwf	127,w
   680  0682  1D03               	skipz
   681  0683  2E86               	goto	u45
   682  0684  30E8               	movlw	232
   683  0685  0270               	subwf	_i,w
   684  0686                     u45:	
   685  0686  1803               	btfsc	3,0
   686  0687  2E99               	goto	l70
   687  0688                     l640:	
   688  0688  3001               	movlw	1
   689  0689  07F0               	addwf	_i,f
   690  068A  1803               	skipnc
   691  068B  0AF1               	incf	_i+1,f
   692  068C  3000               	movlw	0
   693  068D  07F1               	addwf	_i+1,f
   694  068E  0871               	movf	_i+1,w
   695  068F  3A80               	xorlw	128
   696  0690  00FF               	movwf	127
   697  0691  3083               	movlw	131
   698  0692  027F               	subwf	127,w
   699  0693  1D03               	skipz
   700  0694  2E97               	goto	u55
   701  0695  30E8               	movlw	232
   702  0696  0270               	subwf	_i,w
   703  0697                     u55:	
   704  0697  1C03               	skipc
   705  0698  2E88               	goto	l640
   706  0699                     l70:	
   707                           
   708                           ;lcd.h: 34: RB2=0;
   709  0699  1283               	bcf	3,5	;RP0=0, select bank0
   710  069A  1303               	bcf	3,6	;RP1=0, select bank0
   711  069B  1106               	bcf	6,2	;volatile
   712  069C  0008               	return
   713  069D                     __end_of_dat:	
   714                           
   715                           	psect	text3
   716  069D                     __ptext3:	
   717 ;; *************** function _rtc_read_byte *****************
   718 ;; Defined at:
   719 ;;		line 105 in file "rtc.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  addr            1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  addr            1    2[COMMON] unsigned char 
   724 ;;  rec             1    3[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      unsigned char 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         2       0       0       0       0
   736 ;;      Temps:          1       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    2
   741 ;; This function calls:
   742 ;;		_rtc_nak
   743 ;;		_rtc_read
   744 ;;		_rtc_res
   745 ;;		_rtc_send
   746 ;;		_rtc_stop
   747 ;;		_waitmssp
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _rtc_read_byte
   755  069D                     _rtc_read_byte:	
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
   759                           ;rtc_read_byte@addr stored from wreg
   760  069D  00FB               	movwf	rtc_read_byte@addr
   761  069E                     l121:	
   762                           ;rtc.c: 107: unsigned char rec;
   763                           ;rtc.c: 108: L: rtc_res();
   764                           
   765                           ;rtc.c: 111: while(ACKSTAT){goto L;}
   766                           
   767  069E  120A  118A  25C2  120A  118A  	fcall	_rtc_res
   768                           
   769                           ;rtc.c: 109: SSPBUF=0xD0;
   770  06A3  30D0               	movlw	208
   771  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   772  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   773  06A6  0093               	movwf	19	;volatile
   774                           
   775                           ;rtc.c: 110: waitmssp();
   776  06A7  120A  118A  25BC  120A  118A  	fcall	_waitmssp
   777  06AC  1683               	bsf	3,5	;RP0=1, select bank1
   778  06AD  1303               	bcf	3,6	;RP1=0, select bank1
   779  06AE  1B11               	btfsc	17,6	;volatile
   780  06AF  2E9E               	goto	l121
   781                           
   782                           ;rtc.c: 113: rtc_send(addr);
   783  06B0  087B               	movf	rtc_read_byte@addr,w
   784  06B1  120A  118A  25EE  120A  118A  	fcall	_rtc_send
   785                           
   786                           ;rtc.c: 114: rtc_res();
   787  06B6  120A  118A  25C2  120A  118A  	fcall	_rtc_res
   788                           
   789                           ;rtc.c: 115: rtc_send(0xD1);
   790  06BB  30D1               	movlw	209
   791  06BC  120A  118A  25EE  120A  118A  	fcall	_rtc_send
   792                           
   793                           ;rtc.c: 116: rec=rtc_read();
   794  06C1  120A  118A  25D8  120A  118A  	fcall	_rtc_read
   795  06C6  00FA               	movwf	??_rtc_read_byte
   796  06C7  087A               	movf	??_rtc_read_byte,w
   797  06C8  00FC               	movwf	rtc_read_byte@rec
   798                           
   799                           ;rtc.c: 117: rtc_nak();
   800  06C9  120A  118A  25D0  120A  118A  	fcall	_rtc_nak
   801                           
   802                           ;rtc.c: 118: rtc_stop();
   803  06CE  120A  118A  25C9   	fcall	_rtc_stop
   804                           
   805                           ;rtc.c: 119: return rec;
   806  06D1  087C               	movf	rtc_read_byte@rec,w
   807  06D2  0008               	return
   808  06D3                     __end_of_rtc_read_byte:	
   809                           
   810                           	psect	text4
   811  05C9                     __ptext4:	
   812 ;; *************** function _rtc_stop *****************
   813 ;; Defined at:
   814 ;;		line 129 in file "rtc.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    1
   835 ;; This function calls:
   836 ;;		_waitmssp
   837 ;; This function is called by:
   838 ;;		_rtc_read_byte
   839 ;;		_rtc_send_byte
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _rtc_stop
   845  05C9                     _rtc_stop:	
   846                           
   847                           ;rtc.c: 131: PEN=1;
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
   851  05C9  1683               	bsf	3,5	;RP0=1, select bank1
   852  05CA  1303               	bcf	3,6	;RP1=0, select bank1
   853  05CB  1511               	bsf	17,2	;volatile
   854                           
   855                           ;rtc.c: 132: waitmssp();
   856  05CC  120A  118A  25BC   	fcall	_waitmssp
   857  05CF  0008               	return
   858  05D0                     __end_of_rtc_stop:	
   859                           
   860                           	psect	text5
   861  05EE                     __ptext5:	
   862 ;; *************** function _rtc_send *****************
   863 ;; Defined at:
   864 ;;		line 81 in file "rtc.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  a               1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  a               1    0[COMMON] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         1       0       0       0       0
   882 ;;Total ram usage:        1 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		_waitmssp
   887 ;; This function is called by:
   888 ;;		_rtc_read_byte
   889 ;;		_rtc_send_byte
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _rtc_send
   895  05EE                     _rtc_send:	
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
   899                           ;rtc_send@a stored from wreg
   900  05EE  00F9               	movwf	rtc_send@a
   901                           
   902                           ;rtc.c: 83: SSPBUF=a;
   903  05EF  0879               	movf	rtc_send@a,w
   904  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   905  05F1  1303               	bcf	3,6	;RP1=0, select bank0
   906  05F2  0093               	movwf	19	;volatile
   907                           
   908                           ;rtc.c: 84: waitmssp();
   909  05F3  120A  118A  25BC  120A  118A  	fcall	_waitmssp
   910  05F8                     l109:	
   911                           ;rtc.c: 85: while(ACKSTAT);
   912                           
   913  05F8  1683               	bsf	3,5	;RP0=1, select bank1
   914  05F9  1303               	bcf	3,6	;RP1=0, select bank1
   915  05FA  1F11               	btfss	17,6	;volatile
   916  05FB  0008               	return
   917  05FC  2DF8               	goto	l109
   918  05FD                     __end_of_rtc_send:	
   919                           
   920                           	psect	text6
   921  05C2                     __ptext6:	
   922 ;; *************** function _rtc_res *****************
   923 ;; Defined at:
   924 ;;		line 135 in file "rtc.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		status,2, status,0, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    1
   945 ;; This function calls:
   946 ;;		_waitmssp
   947 ;; This function is called by:
   948 ;;		_rtc_read_byte
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _rtc_res
   954  05C2                     _rtc_res:	
   955                           
   956                           ;rtc.c: 137: RSEN=1;
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
   960  05C2  1683               	bsf	3,5	;RP0=1, select bank1
   961  05C3  1303               	bcf	3,6	;RP1=0, select bank1
   962  05C4  1491               	bsf	17,1	;volatile
   963                           
   964                           ;rtc.c: 138: waitmssp();
   965  05C5  120A  118A  25BC   	fcall	_waitmssp
   966  05C8  0008               	return
   967  05C9                     __end_of_rtc_res:	
   968                           
   969                           	psect	text7
   970  05D8                     __ptext7:	
   971 ;; *************** function _rtc_read *****************
   972 ;; Defined at:
   973 ;;		line 98 in file "rtc.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      unsigned char 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		_waitmssp
   996 ;; This function is called by:
   997 ;;		_rtc_read_byte
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _rtc_read
  1003  05D8                     _rtc_read:	
  1004                           
  1005                           ;rtc.c: 100: RCEN=1;
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  1009  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  1010  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  1011  05DA  1591               	bsf	17,3	;volatile
  1012                           
  1013                           ;rtc.c: 101: waitmssp();
  1014  05DB  120A  118A  25BC   	fcall	_waitmssp
  1015                           
  1016                           ;rtc.c: 102: return SSPBUF;
  1017  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1018  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1019  05E0  0813               	movf	19,w	;volatile
  1020  05E1  0008               	return
  1021  05E2                     __end_of_rtc_read:	
  1022                           
  1023                           	psect	text8
  1024  05D0                     __ptext8:	
  1025 ;; *************** function _rtc_nak *****************
  1026 ;; Defined at:
  1027 ;;		line 148 in file "rtc.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    1
  1048 ;; This function calls:
  1049 ;;		_waitmssp
  1050 ;; This function is called by:
  1051 ;;		_rtc_read_byte
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _rtc_nak
  1057  05D0                     _rtc_nak:	
  1058                           
  1059                           ;rtc.c: 150: ACKDT=1;
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  1063  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  1064  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  1065  05D2  1691               	bsf	17,5	;volatile
  1066                           
  1067                           ;rtc.c: 151: ACKEN=1;
  1068  05D3  1611               	bsf	17,4	;volatile
  1069                           
  1070                           ;rtc.c: 152: waitmssp();
  1071  05D4  120A  118A  25BC   	fcall	_waitmssp
  1072  05D7  0008               	return
  1073  05D8                     __end_of_rtc_nak:	
  1074                           
  1075                           	psect	text9
  1076  05BC                     __ptext9:	
  1077 ;; *************** function _waitmssp *****************
  1078 ;; Defined at:
  1079 ;;		line 75 in file "rtc.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		None
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_rtc_send
  1103 ;;		_rtc_read
  1104 ;;		_rtc_read_byte
  1105 ;;		_rtc_stop
  1106 ;;		_rtc_res
  1107 ;;		_rtc_nak
  1108 ;;		_rtc_start
  1109 ;;		_rtc_ack
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _waitmssp
  1115  05BC                     _waitmssp:	
  1116  05BC                     l103:	
  1117                           ;rtc.c: 77: while(!SSPIF);
  1118                           
  1119                           ;incstack = 0
  1120                           ; Regs used in _waitmssp: []
  1121                           
  1122  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1123  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1124  05BE  1D8C               	btfss	12,3	;volatile
  1125  05BF  2DBC               	goto	l103
  1126                           
  1127                           ;rtc.c: 78: SSPIF=0;
  1128  05C0  118C               	bcf	12,3	;volatile
  1129  05C1  0008               	return
  1130  05C2                     __end_of_waitmssp:	
  1131                           
  1132                           	psect	text10
  1133  05FD                     __ptext10:	
  1134 ;; *************** function _rtc_int *****************
  1135 ;; Defined at:
  1136 ;;		line 68 in file "rtc.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _rtc_int
  1165  05FD                     _rtc_int:	
  1166                           
  1167                           ;rtc.c: 70: TRISC3=TRISC4=1;
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _rtc_int: [wreg]
  1171  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1172  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  1173  05FF  1607               	bsf	7,4	;volatile
  1174  0600  1E07               	btfss	7,4	;volatile
  1175  0601  2E06               	goto	u80
  1176  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0604  1587               	bsf	7,3	;volatile
  1179  0605  2E09               	goto	l688
  1180  0606                     u80:	
  1181  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1182  0607  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0608  1187               	bcf	7,3	;volatile
  1184  0609                     l688:	
  1185                           
  1186                           ;rtc.c: 71: SSPCON=0x28;
  1187  0609  3028               	movlw	40
  1188  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1189  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1190  060C  0094               	movwf	20	;volatile
  1191                           
  1192                           ;rtc.c: 72: SSPADD= (((11059200/4)/100)-1);
  1193  060D  30FF               	movlw	255
  1194  060E  1683               	bsf	3,5	;RP0=1, select bank1
  1195  060F  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0610  0093               	movwf	19	;volatile
  1197  0611  0008               	return
  1198  0612                     __end_of_rtc_int:	
  1199                           
  1200                           	psect	text11
  1201  0612                     __ptext11:	
  1202 ;; *************** function _lcd_init *****************
  1203 ;; Defined at:
  1204 ;;		line 10 in file "lcd.h"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    1
  1225 ;; This function calls:
  1226 ;;		_cmd
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _lcd_init
  1234  0612                     _lcd_init:	
  1235                           
  1236                           ;lcd.h: 12: TRISD=TRISB=0;
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1240  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0614  0186               	clrf	6	;volatile
  1243  0615  0188               	clrf	8	;volatile
  1244                           
  1245                           ;lcd.h: 13: cmd(0x38);
  1246  0616  3038               	movlw	56
  1247  0617  120A  118A  2649  120A  118A  	fcall	_cmd
  1248                           
  1249                           ;lcd.h: 14: cmd(0x0c);
  1250  061C  300C               	movlw	12
  1251  061D  120A  118A  2649  120A  118A  	fcall	_cmd
  1252                           
  1253                           ;lcd.h: 15: cmd(0x06);
  1254  0622  3006               	movlw	6
  1255  0623  120A  118A  2649  120A  118A  	fcall	_cmd
  1256                           
  1257                           ;lcd.h: 16: cmd(0x80);
  1258  0628  3080               	movlw	128
  1259  0629  120A  118A  2649   	fcall	_cmd
  1260  062C  0008               	return
  1261  062D                     __end_of_lcd_init:	
  1262                           
  1263                           	psect	text12
  1264  0649                     __ptext12:	
  1265 ;; *************** function _cmd *****************
  1266 ;; Defined at:
  1267 ;;		line 18 in file "lcd.h"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  a               1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  a               1    0[COMMON] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, btemp+1
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         1       0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_lcd_init
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _cmd
  1297  0649                     _cmd:	
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _cmd: [wreg+status,2+btemp+1]
  1301                           ;cmd@a stored from wreg
  1302  0649  00F9               	movwf	cmd@a
  1303                           
  1304                           ;lcd.h: 20: PORTD=a;
  1305  064A  0879               	movf	cmd@a,w
  1306  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1307  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1308  064D  0088               	movwf	8	;volatile
  1309                           
  1310                           ;lcd.h: 21: RB0=0;
  1311  064E  1006               	bcf	6,0	;volatile
  1312                           
  1313                           ;lcd.h: 22: RB1=0;
  1314  064F  1086               	bcf	6,1	;volatile
  1315                           
  1316                           ;lcd.h: 23: RB2=1;
  1317  0650  1506               	bsf	6,2	;volatile
  1318                           
  1319                           ;lcd.h: 24: for(i=0;i<1000;i++);
  1320  0651  01F0               	clrf	_i
  1321  0652  01F1               	clrf	_i+1
  1322  0653  0871               	movf	_i+1,w
  1323  0654  3A80               	xorlw	128
  1324  0655  00FF               	movwf	127
  1325  0656  3083               	movlw	131
  1326  0657  027F               	subwf	127,w
  1327  0658  1D03               	skipz
  1328  0659  2E5C               	goto	u25
  1329  065A  30E8               	movlw	232
  1330  065B  0270               	subwf	_i,w
  1331  065C                     u25:	
  1332  065C  1803               	btfsc	3,0
  1333  065D  2E6F               	goto	l65
  1334  065E                     l622:	
  1335  065E  3001               	movlw	1
  1336  065F  07F0               	addwf	_i,f
  1337  0660  1803               	skipnc
  1338  0661  0AF1               	incf	_i+1,f
  1339  0662  3000               	movlw	0
  1340  0663  07F1               	addwf	_i+1,f
  1341  0664  0871               	movf	_i+1,w
  1342  0665  3A80               	xorlw	128
  1343  0666  00FF               	movwf	127
  1344  0667  3083               	movlw	131
  1345  0668  027F               	subwf	127,w
  1346  0669  1D03               	skipz
  1347  066A  2E6D               	goto	u35
  1348  066B  30E8               	movlw	232
  1349  066C  0270               	subwf	_i,w
  1350  066D                     u35:	
  1351  066D  1C03               	skipc
  1352  066E  2E5E               	goto	l622
  1353  066F                     l65:	
  1354                           
  1355                           ;lcd.h: 25: RB2=0;
  1356  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0671  1106               	bcf	6,2	;volatile
  1359  0672  0008               	return
  1360  0673                     __end_of_cmd:	
  1361                           
  1362                           	psect	text13
  1363  05E2                     __ptext13:	
  1364 ;; *************** function _convup *****************
  1365 ;; Defined at:
  1366 ;;		line 155 in file "rtc.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  bcd             1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  bcd             1    1[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           
  1394                           ;psect for function _convup
  1395  05E2                     _convup:	
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in _convup: [wreg+status,2+status,0]
  1399                           ;convup@bcd stored from wreg
  1400  05E2  00FA               	movwf	convup@bcd
  1401                           
  1402                           ;rtc.c: 157: return ((bcd>>4)+48);
  1403  05E3  087A               	movf	convup@bcd,w
  1404  05E4  00F9               	movwf	??_convup
  1405  05E5  3004               	movlw	4
  1406  05E6                     u115:	
  1407  05E6  1003               	clrc
  1408  05E7  0CF9               	rrf	??_convup,f
  1409  05E8  3EFF               	addlw	-1
  1410  05E9  1D03               	skipz
  1411  05EA  2DE6               	goto	u115
  1412  05EB  0879               	movf	??_convup,w
  1413  05EC  3E30               	addlw	48
  1414  05ED  0008               	return
  1415  05EE                     __end_of_convup:	
  1416                           
  1417                           	psect	text14
  1418  05B7                     __ptext14:	
  1419 ;; *************** function _convd *****************
  1420 ;; Defined at:
  1421 ;;		line 160 in file "rtc.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  bcd             1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  bcd             1    0[COMMON] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      unsigned char 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _convd
  1450  05B7                     _convd:	
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _convd: [wreg+status,2+status,0]
  1454                           ;convd@bcd stored from wreg
  1455  05B7  00F9               	movwf	convd@bcd
  1456                           
  1457                           ;rtc.c: 162: return ((bcd&0x0F)+48);
  1458  05B8  0879               	movf	convd@bcd,w
  1459  05B9  390F               	andlw	15
  1460  05BA  3E30               	addlw	48
  1461  05BB  0008               	return
  1462  05BC                     __end_of_convd:	
  1463  007E                     btemp	set	126	;btemp
  1464  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_rtc_read_byte
    _show->_dat
    _rtc_read_byte->_rtc_send
    _lcd_init->_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     234
                                              4 COMMON     1     1      0
                                _cmd
                              _convd
                             _convup
                                _dat
                           _lcd_init
                            _rtc_int
                      _rtc_read_byte
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     114
                                              1 COMMON     2     2      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rtc_read_byte                                        3     3      0      45
                                              1 COMMON     3     3      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_send                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _convup                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convd                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _convd
   _convup
   _dat
   _lcd_init
     _cmd
   _rtc_int
   _rtc_read_byte
     _rtc_nak
       _waitmssp
     _rtc_read
       _waitmssp
     _rtc_res
       _waitmssp
     _rtc_send
       _waitmssp
     _rtc_stop
       _waitmssp
     _waitmssp
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Oct 09 12:36:47 2023

                      _i 0070                        pc 0002                       l70 0699  
                     l65 066F                       u25 065C                       u35 066D  
                     u45 0686                       u55 0697                       u80 0606  
                     fsr 0004                      l103 05BC                      l121 069E  
                    l109 05F8                      l622 065E                      l640 0688  
                    l806 062E                      l816 06EF                      l688 0609  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    u115 05E6                      _PEN 048A                      _SEN 0488  
                    _dat 0673                      _cmd 0649                      _day 0075  
                    _min 0077                      _sec 0078                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_dat 0079  
                   ?_cmd 0079                     STR_1 0009                     STR_2 000F  
                   _RCEN 048B                     _RSEN 0489                     _date 0074  
                   dat@b 0079                     cmd@a 0079                     _main 06D3  
                   _hour 0076                     _show 062D                     _year 0072  
                   btemp 007E                     start 0000                    ??_dat 0079  
                  ??_cmd 0079          ??_rtc_read_byte 007A                    ?_main 0079  
                  _ACKEN 048C                    _ACKDT 048D            __CFG_WDTE$OFF 0000  
                  ?_show 0079                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _convd 05B7  
                  _month 0073                    pclath 000A          __end_of_rtc_nak 05D8  
        __end_of_rtc_int 0612          __end_of_rtc_res 05C9                    show@s 007B  
                  status 0003                    wtemp0 007E          __initialization 07F3  
           __end_of_main 07F3             __end_of_show 0649                   ??_main 007D  
                 ??_show 007A                   ?_convd 0079                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_lcd_init 062D                   _convup 05E2  
       __end_of_rtc_read 05E2         __end_of_waitmssp 05C2         __end_of_rtc_send 05FD  
       __end_of_rtc_stop 05D0                ??_rtc_nak 0079                ??_rtc_int 0079  
              ??_rtc_res 0079  __end_of__initialization 07FC           __pcstackCOMMON 0079  
          __end_of_convd 05BC                  ??_convd 0079               __pmaintext 06D3  
                ?_convup 0079                  _ACKSTAT 048E                ?_lcd_init 0079  
             __stringtab 0003                ?_rtc_read 0079                ?_waitmssp 0079  
              ?_rtc_send 0079                ?_rtc_stop 0079          __size_of_convup 000C  
                __ptext1 062D                  __ptext2 0673                  __ptext3 069D  
                __ptext4 05C9                  __ptext5 05EE                  __ptext6 05C2  
                __ptext7 05D8                  __ptext8 05D0                  __ptext9 05BC  
  __end_of_rtc_read_byte 06D3             __size_of_dat 002A             __size_of_cmd 002A  
                _rtc_nak 05D0                  _rtc_int 05FD                  _rtc_res 05C2  
             ??_lcd_init 007A     end_of_initialization 07FC               ??_rtc_read 0079  
             ??_waitmssp 0079               ??_rtc_send 0079               ??_rtc_stop 0079  
       rtc_read_byte@rec 007C           __end_of_convup 05EE      start_initialization 07F3  
            __end_of_dat 069D              __end_of_cmd 0673                 ??_convup 0079  
            __pbssCOMMON 0070                ___latbits 0002        __size_of_lcd_init 001B  
      __size_of_rtc_read 000A        __size_of_waitmssp 0006        __size_of_rtc_send 000F  
      __size_of_rtc_stop 0007                __pstrings 0003                 ?_rtc_nak 0079  
               ?_rtc_int 0079                 ?_rtc_res 0079           __size_of_convd 0005  
            __stringbase 0008                convup@bcd 007A   __size_of_rtc_read_byte 0036  
     __end_of__stringtab 0009                 __ptext10 05FD                 __ptext11 0612  
               __ptext12 0649                 __ptext13 05E2                 __ptext14 05B7  
       __size_of_rtc_nak 0008         __size_of_rtc_int 0015         __size_of_rtc_res 0007  
               _lcd_init 0612            __size_of_main 0120            __size_of_show 001C  
               _rtc_read 05D8                 _waitmssp 05BC                 _rtc_send 05EE  
               _rtc_stop 05C9                rtc_send@a 0079                 convd@bcd 0079  
          _rtc_read_byte 069D                stringcode 0003           ?_rtc_read_byte 0079  
               stringdir 0003                 stringtab 0003        rtc_read_byte@addr 007B  
