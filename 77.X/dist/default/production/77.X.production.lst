

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Sep 16 15:48:22 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110                           
   111                           	psect	idataBANK0
   112  067F                     __pidataBANK0:	
   113                           
   114                           ;initializer for main@F1100
   115  067F  34C0               	retlw	192
   116  0680  3400               	retlw	0
   117  0681  34F9               	retlw	249
   118  0682  3400               	retlw	0
   119  0683  34A4               	retlw	164
   120  0684  3400               	retlw	0
   121  0685  34B0               	retlw	176
   122  0686  3400               	retlw	0
   123  0687  3499               	retlw	153
   124  0688  3400               	retlw	0
   125  0689  3492               	retlw	146
   126  068A  3400               	retlw	0
   127  068B  3482               	retlw	130
   128  068C  3400               	retlw	0
   129  068D  34F8               	retlw	248
   130  068E  3400               	retlw	0
   131  068F  3480               	retlw	128
   132  0690  3400               	retlw	0
   133  0691  3490               	retlw	144
   134  0692  3400               	retlw	0
   135  0008                     _PORTD	set	8
   136  0031                     _RB1	set	49
   137  0030                     _RB0	set	48
   138  0088                     _TRISD	set	136
   139  0431                     _TRISB1	set	1073
   140  0430                     _TRISB0	set	1072
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  07F0                     start_initialization:	
   146  07F0                     __initialization:	
   147                           
   148                           ; Initialize objects allocated to BANK0
   149  07F0  1383               	bcf	3,7	;select IRP bank0
   150  07F1  304C               	movlw	low (__pdataBANK0+20)
   151  07F2  00FD               	movwf	btemp+-1
   152  07F3  3006               	movlw	high __pidataBANK0
   153  07F4  00FE               	movwf	btemp
   154  07F5  307F               	movlw	low __pidataBANK0
   155  07F6  00FF               	movwf	btemp+1
   156  07F7  3038               	movlw	low __pdataBANK0
   157  07F8  0084               	movwf	4
   158  07F9  120A  118A  2672   	fcall	init_ram0
   159  07FC                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FC                     __end_of__initialization:	
   163  07FC  0183               	clrf	3
   164  07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	dataBANK0
   167  0038                     __pdataBANK0:	
   168  0038                     main@F1100:	
   169  0038                     	ds	20
   170                           
   171                           	psect	inittext
   172  066E                     init_fetch0:	
   173                           ;	Called with low address in FSR and high address in W
   174                           
   175  066E  087E               	movf	126,w
   176  066F  008A               	movwf	10
   177  0670  087F               	movf	127,w
   178  0671  0082               	movwf	2
   179  0672                     init_ram0:	
   180                           ;Called with:
   181                           ;	high address of idata address in btemp 
   182                           ;	low address of idata address in btemp+1 
   183                           ;	low address of data in FSR
   184                           ;	high address + 1 of data in btemp-1
   185                           
   186  0672  266E  120A  118A   	fcall	init_fetch0
   187  0675  0080               	movwf	0
   188  0676  0A84               	incf	4,f
   189  0677  0804               	movf	4,w
   190  0678  067D               	xorwf	125,w
   191  0679  1903               	btfsc	3,2
   192  067A  3400               	retlw	0
   193  067B  0AFF               	incf	127,f
   194  067C  1903               	btfsc	3,2
   195  067D  0AFE               	incf	126,f
   196  067E  2E72               	goto	init_ram0
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:	
   200  0070                     ?_delay:	
   201  0070                     ??_delay:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?___awdiv:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?___awmod:	
   211                           ; 2 bytes @ 0x0
   212                           
   213  0070                     delay@i:	
   214                           ; 2 bytes @ 0x0
   215                           
   216  0070                     ___awdiv@divisor:	
   217                           ; 2 bytes @ 0x0
   218                           
   219  0070                     ___awmod@divisor:	
   220                           ; 2 bytes @ 0x0
   221                           
   222                           
   223                           ; 2 bytes @ 0x0
   224  0070                     	ds	2
   225  0072                     delay@j:	
   226  0072                     ___awdiv@dividend:	
   227                           ; 2 bytes @ 0x2
   228                           
   229  0072                     ___awmod@dividend:	
   230                           ; 2 bytes @ 0x2
   231                           
   232                           
   233                           ; 2 bytes @ 0x2
   234  0072                     	ds	2
   235  0074                     ??___awdiv:	
   236  0074                     ??___awmod:	
   237                           ; 1 bytes @ 0x4
   238                           
   239                           
   240                           ; 1 bytes @ 0x4
   241  0074                     	ds	1
   242  0075                     ___awdiv@counter:	
   243  0075                     ___awmod@counter:	
   244                           ; 1 bytes @ 0x5
   245                           
   246                           
   247                           ; 1 bytes @ 0x5
   248  0075                     	ds	1
   249  0076                     ___awdiv@sign:	
   250  0076                     ___awmod@sign:	
   251                           ; 1 bytes @ 0x6
   252                           
   253                           
   254                           ; 1 bytes @ 0x6
   255  0076                     	ds	1
   256  0077                     ___awdiv@quotient:	
   257                           
   258                           ; 2 bytes @ 0x7
   259  0077                     	ds	2
   260  0079                     ??_main:	
   261                           
   262                           ; 1 bytes @ 0x9
   263  0079                     	ds	4
   264                           
   265                           	psect	cstackBANK0
   266  0020                     __pcstackBANK0:	
   267  0020                     main@a:	
   268                           
   269                           ; 20 bytes @ 0x0
   270  0020                     	ds	20
   271  0034                     main@j:	
   272                           
   273                           ; 2 bytes @ 0x14
   274  0034                     	ds	2
   275  0036                     main@i:	
   276                           
   277                           ; 2 bytes @ 0x16
   278  0036                     	ds	2
   279                           
   280                           	psect	maintext
   281  0769                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 19 in file "newmain.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  a              20    0[BANK0 ] int [10]
   292 ;;  i               2   22[BANK0 ] int 
   293 ;;  j               2   20[BANK0 ] int 
   294 ;;  l               2    0        int 
   295 ;;  k               2    0        int 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : B00/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   305 ;;      Params:         0       0       0       0       0
   306 ;;      Locals:         0      24       0       0       0
   307 ;;      Temps:          4       0       0       0       0
   308 ;;      Totals:         4      24       0       0       0
   309 ;;Total ram usage:       28 bytes
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		___awdiv
   313 ;;		___awmod
   314 ;;		_delay
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _main
   322  0769                     _main:	
   323                           
   324                           ;newmain.c: 22: TRISD=0x00;
   325                           
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   328  0769  1683               	bsf	3,5	;RP0=1, select bank1
   329  076A  1303               	bcf	3,6	;RP1=0, select bank1
   330  076B  0188               	clrf	8	;volatile
   331                           
   332                           ;newmain.c: 23: TRISB0=0;
   333  076C  1006               	bcf	6,0	;volatile
   334                           
   335                           ;newmain.c: 24: TRISB1=0;
   336  076D  1086               	bcf	6,1	;volatile
   337                           
   338                           ;newmain.c: 27: int a[]={0xC0,0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90},i,j,
      +                          k,l;
   339  076E  3020               	movlw	main@a& (0+255)
   340  076F  0084               	movwf	4
   341  0770  3038               	movlw	low main@F1100
   342  0771  00F9               	movwf	??_main
   343  0772  0804               	movf	4,w
   344  0773  00FA               	movwf	??_main+1
   345  0774  3014               	movlw	20
   346  0775  00FB               	movwf	??_main+2
   347  0776                     u500:	
   348  0776  0879               	movf	??_main,w
   349  0777  0084               	movwf	4
   350  0778  1383               	bcf	3,7	;select IRP bank0
   351  0779  0800               	movf	0,w
   352  077A  00FC               	movwf	??_main+3
   353  077B  0AF9               	incf	??_main,f
   354  077C  087A               	movf	??_main+1,w
   355  077D  0084               	movwf	4
   356  077E  087C               	movf	??_main+3,w
   357  077F  0080               	movwf	0
   358  0780  0AFA               	incf	??_main+1,f
   359  0781  0BFB               	decfsz	??_main+2,f
   360  0782  2F76               	goto	u500
   361                           
   362                           ;newmain.c: 28: for( i=0;i<100;i++)
   363  0783  1283               	bcf	3,5	;RP0=0, select bank0
   364  0784  1303               	bcf	3,6	;RP1=0, select bank0
   365  0785  01B6               	clrf	main@i
   366  0786  01B7               	clrf	main@i+1
   367  0787  0837               	movf	main@i+1,w
   368  0788  3A80               	xorlw	128
   369  0789  00FF               	movwf	127
   370  078A  3080               	movlw	128
   371  078B  027F               	subwf	127,w
   372  078C  1D03               	skipz
   373  078D  2F90               	goto	u515
   374  078E  3064               	movlw	100
   375  078F  0236               	subwf	main@i,w
   376  0790                     u515:	
   377  0790  1803               	btfsc	3,0
   378  0791  2FED               	goto	l21
   379  0792                     l742:	
   380                           
   381                           ;newmain.c: 29: {
   382                           ;newmain.c: 30: j=i%10;
   383  0792  300A               	movlw	10
   384  0793  00F0               	movwf	___awmod@divisor
   385  0794  3000               	movlw	0
   386  0795  00F1               	movwf	___awmod@divisor+1
   387  0796  1283               	bcf	3,5	;RP0=0, select bank0
   388  0797  1303               	bcf	3,6	;RP1=0, select bank0
   389  0798  0837               	movf	main@i+1,w
   390  0799  00F3               	movwf	___awmod@dividend+1
   391  079A  0836               	movf	main@i,w
   392  079B  00F2               	movwf	___awmod@dividend
   393  079C  120A  118A  26C5  120A  118A  	fcall	___awmod
   394  07A1  0871               	movf	?___awmod+1,w
   395  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   396  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   397  07A4  00B5               	movwf	main@j+1
   398  07A5  0870               	movf	?___awmod,w
   399  07A6  00B4               	movwf	main@j
   400                           
   401                           ;newmain.c: 31: RB0=1;
   402  07A7  1406               	bsf	6,0	;volatile
   403                           
   404                           ;newmain.c: 32: RB1=0;
   405  07A8  1086               	bcf	6,1	;volatile
   406                           
   407                           ;newmain.c: 33: PORTD=a[j];
   408  07A9  0834               	movf	main@j,w
   409  07AA  00F9               	movwf	??_main
   410  07AB  0779               	addwf	??_main,w
   411  07AC  3E20               	addlw	(low (main@a| 0))& (0+255)
   412  07AD  0084               	movwf	4
   413  07AE  1383               	bcf	3,7	;select IRP bank0
   414  07AF  0800               	movf	0,w
   415  07B0  0088               	movwf	8	;volatile
   416                           
   417                           ;newmain.c: 34: delay();
   418  07B1  120A  118A  2693  120A  118A  	fcall	_delay
   419                           
   420                           ;newmain.c: 37: j=i/10;
   421  07B6  300A               	movlw	10
   422  07B7  00F0               	movwf	___awdiv@divisor
   423  07B8  3000               	movlw	0
   424  07B9  00F1               	movwf	___awdiv@divisor+1
   425  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   426  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   427  07BC  0837               	movf	main@i+1,w
   428  07BD  00F3               	movwf	___awdiv@dividend+1
   429  07BE  0836               	movf	main@i,w
   430  07BF  00F2               	movwf	___awdiv@dividend
   431  07C0  120A  118A  2710  120A  118A  	fcall	___awdiv
   432  07C5  0871               	movf	?___awdiv+1,w
   433  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   434  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   435  07C8  00B5               	movwf	main@j+1
   436  07C9  0870               	movf	?___awdiv,w
   437  07CA  00B4               	movwf	main@j
   438                           
   439                           ;newmain.c: 38: RB0=0;
   440  07CB  1006               	bcf	6,0	;volatile
   441                           
   442                           ;newmain.c: 39: RB1=1;
   443  07CC  1486               	bsf	6,1	;volatile
   444                           
   445                           ;newmain.c: 40: PORTD= a[j];
   446  07CD  0834               	movf	main@j,w
   447  07CE  00F9               	movwf	??_main
   448  07CF  0779               	addwf	??_main,w
   449  07D0  3E20               	addlw	(low (main@a| 0))& (0+255)
   450  07D1  0084               	movwf	4
   451  07D2  1383               	bcf	3,7	;select IRP bank0
   452  07D3  0800               	movf	0,w
   453  07D4  0088               	movwf	8	;volatile
   454                           
   455                           ;newmain.c: 41: delay();
   456  07D5  120A  118A  2693  120A  118A  	fcall	_delay
   457  07DA  3001               	movlw	1
   458  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   459  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   460  07DD  07B6               	addwf	main@i,f
   461  07DE  1803               	skipnc
   462  07DF  0AB7               	incf	main@i+1,f
   463  07E0  3000               	movlw	0
   464  07E1  07B7               	addwf	main@i+1,f
   465  07E2  0837               	movf	main@i+1,w
   466  07E3  3A80               	xorlw	128
   467  07E4  00FF               	movwf	127
   468  07E5  3080               	movlw	128
   469  07E6  027F               	subwf	127,w
   470  07E7  1D03               	skipz
   471  07E8  2FEB               	goto	u525
   472  07E9  3064               	movlw	100
   473  07EA  0236               	subwf	main@i,w
   474  07EB                     u525:	
   475  07EB  1C03               	skipc
   476  07EC  2F92               	goto	l742
   477  07ED                     l21:	
   478                           ;newmain.c: 42: }
   479                           ;newmain.c: 44: return;
   480                           
   481  07ED  120A  118A  2800   	ljmp	start
   482  07F0                     __end_of_main:	
   483                           
   484                           	psect	text1
   485  0693                     __ptext1:	
   486 ;; *************** function _delay *****************
   487 ;; Defined at:
   488 ;;		line 46 in file "newmain.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  j               2    2[COMMON] int 
   493 ;;  i               2    0[COMMON] int 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, btemp+1
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         4       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         4       0       0       0       0
   507 ;;Total ram usage:        4 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _delay
   518  0693                     _delay:	
   519                           
   520                           ;newmain.c: 48: int i,j;
   521                           ;newmain.c: 49: for(i=0;i<1000;i++)
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   525  0693  01F0               	clrf	delay@i
   526  0694  01F1               	clrf	delay@i+1
   527  0695                     L1:	
   528  0695  0871               	movf	delay@i+1,w
   529  0696  3A80               	xorlw	128
   530  0697  00FF               	movwf	127
   531  0698  3083               	movlw	131
   532  0699  027F               	subwf	127,w
   533  069A  1D03               	skipz
   534  069B  2E9E               	goto	u275
   535  069C  30E8               	movlw	232
   536  069D  0270               	subwf	delay@i,w
   537  069E                     u275:	
   538  069E  1803               	btfsc	3,0
   539  069F  0008               	return
   540                           
   541                           ;newmain.c: 50: for(j=0;j<100;j++);
   542  06A0  01F2               	clrf	delay@j
   543  06A1  01F3               	clrf	delay@j+1
   544  06A2  0873               	movf	delay@j+1,w
   545  06A3  3A80               	xorlw	128
   546  06A4  00FF               	movwf	127
   547  06A5  3080               	movlw	128
   548  06A6  027F               	subwf	127,w
   549  06A7  1D03               	skipz
   550  06A8  2EAB               	goto	u285
   551  06A9  3064               	movlw	100
   552  06AA  0272               	subwf	delay@j,w
   553  06AB                     u285:	
   554  06AB  1803               	btfsc	3,0
   555  06AC  2EBE               	goto	l642
   556  06AD                     l638:	
   557  06AD  3001               	movlw	1
   558  06AE  07F2               	addwf	delay@j,f
   559  06AF  1803               	skipnc
   560  06B0  0AF3               	incf	delay@j+1,f
   561  06B1  3000               	movlw	0
   562  06B2  07F3               	addwf	delay@j+1,f
   563  06B3  0873               	movf	delay@j+1,w
   564  06B4  3A80               	xorlw	128
   565  06B5  00FF               	movwf	127
   566  06B6  3080               	movlw	128
   567  06B7  027F               	subwf	127,w
   568  06B8  1D03               	skipz
   569  06B9  2EBC               	goto	u295
   570  06BA  3064               	movlw	100
   571  06BB  0272               	subwf	delay@j,w
   572  06BC                     u295:	
   573  06BC  1C03               	skipc
   574  06BD  2EAD               	goto	l638
   575  06BE                     l642:	
   576  06BE  3001               	movlw	1
   577  06BF  07F0               	addwf	delay@i,f
   578  06C0  1803               	skipnc
   579  06C1  0AF1               	incf	delay@i+1,f
   580  06C2  3000               	movlw	0
   581  06C3  07F1               	addwf	delay@i+1,f
   582  06C4  2E95               	goto	L1
   583  06C5                     __end_of_delay:	
   584                           
   585                           	psect	text2
   586  06C5                     __ptext2:	
   587 ;; *************** function ___awmod *****************
   588 ;; Defined at:
   589 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  divisor         2    0[COMMON] int 
   592 ;;  dividend        2    2[COMMON] int 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  sign            1    6[COMMON] unsigned char 
   595 ;;  counter         1    5[COMMON] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2    0[COMMON] int 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         4       0       0       0       0
   606 ;;      Locals:         2       0       0       0       0
   607 ;;      Temps:          1       0       0       0       0
   608 ;;      Totals:         7       0       0       0       0
   609 ;;Total ram usage:        7 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function ___awmod
   620  06C5                     ___awmod:	
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   624  06C5  01F6               	clrf	___awmod@sign
   625  06C6  1FF3               	btfss	___awmod@dividend+1,7
   626  06C7  2ECF               	goto	l698
   627  06C8  09F2               	comf	___awmod@dividend,f
   628  06C9  09F3               	comf	___awmod@dividend+1,f
   629  06CA  0AF2               	incf	___awmod@dividend,f
   630  06CB  1903               	skipnz
   631  06CC  0AF3               	incf	___awmod@dividend+1,f
   632  06CD  01F6               	clrf	___awmod@sign
   633  06CE  0AF6               	incf	___awmod@sign,f
   634  06CF                     l698:	
   635  06CF  1FF1               	btfss	___awmod@divisor+1,7
   636  06D0  2ED6               	goto	l702
   637  06D1  09F0               	comf	___awmod@divisor,f
   638  06D2  09F1               	comf	___awmod@divisor+1,f
   639  06D3  0AF0               	incf	___awmod@divisor,f
   640  06D4  1903               	skipnz
   641  06D5  0AF1               	incf	___awmod@divisor+1,f
   642  06D6                     l702:	
   643  06D6  0870               	movf	___awmod@divisor,w
   644  06D7  0471               	iorwf	___awmod@divisor+1,w
   645  06D8  1903               	btfsc	3,2
   646  06D9  2F03               	goto	l720
   647  06DA  01F5               	clrf	___awmod@counter
   648  06DB  0AF5               	incf	___awmod@counter,f
   649  06DC                     l710:	
   650  06DC  1BF1               	btfsc	___awmod@divisor+1,7
   651  06DD  2EEA               	goto	l712
   652  06DE  3001               	movlw	1
   653  06DF                     u445:	
   654  06DF  1003               	clrc
   655  06E0  0DF0               	rlf	___awmod@divisor,f
   656  06E1  0DF1               	rlf	___awmod@divisor+1,f
   657  06E2  3EFF               	addlw	-1
   658  06E3  1D03               	skipz
   659  06E4  2EDF               	goto	u445
   660  06E5  3001               	movlw	1
   661  06E6  00F4               	movwf	??___awmod
   662  06E7  0874               	movf	??___awmod,w
   663  06E8  07F5               	addwf	___awmod@counter,f
   664  06E9  2EDC               	goto	l710
   665  06EA                     l712:	
   666  06EA  0871               	movf	___awmod@divisor+1,w
   667  06EB  0273               	subwf	___awmod@dividend+1,w
   668  06EC  1D03               	skipz
   669  06ED  2EF0               	goto	u465
   670  06EE  0870               	movf	___awmod@divisor,w
   671  06EF  0272               	subwf	___awmod@dividend,w
   672  06F0                     u465:	
   673  06F0  1C03               	skipc
   674  06F1  2EF8               	goto	l716
   675  06F2  0870               	movf	___awmod@divisor,w
   676  06F3  02F2               	subwf	___awmod@dividend,f
   677  06F4  0871               	movf	___awmod@divisor+1,w
   678  06F5  1C03               	skipc
   679  06F6  03F3               	decf	___awmod@dividend+1,f
   680  06F7  02F3               	subwf	___awmod@dividend+1,f
   681  06F8                     l716:	
   682  06F8  3001               	movlw	1
   683  06F9                     u475:	
   684  06F9  1003               	clrc
   685  06FA  0CF1               	rrf	___awmod@divisor+1,f
   686  06FB  0CF0               	rrf	___awmod@divisor,f
   687  06FC  3EFF               	addlw	-1
   688  06FD  1D03               	skipz
   689  06FE  2EF9               	goto	u475
   690  06FF  3001               	movlw	1
   691  0700  02F5               	subwf	___awmod@counter,f
   692  0701  1D03               	btfss	3,2
   693  0702  2EEA               	goto	l712
   694  0703                     l720:	
   695  0703  0876               	movf	___awmod@sign,w
   696  0704  1903               	btfsc	3,2
   697  0705  2F0B               	goto	l724
   698  0706  09F2               	comf	___awmod@dividend,f
   699  0707  09F3               	comf	___awmod@dividend+1,f
   700  0708  0AF2               	incf	___awmod@dividend,f
   701  0709  1903               	skipnz
   702  070A  0AF3               	incf	___awmod@dividend+1,f
   703  070B                     l724:	
   704  070B  0873               	movf	___awmod@dividend+1,w
   705  070C  00F1               	movwf	?___awmod+1
   706  070D  0872               	movf	___awmod@dividend,w
   707  070E  00F0               	movwf	?___awmod
   708  070F  0008               	return
   709  0710                     __end_of___awmod:	
   710                           
   711                           	psect	text3
   712  0710                     __ptext3:	
   713 ;; *************** function ___awdiv *****************
   714 ;; Defined at:
   715 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  divisor         2    0[COMMON] int 
   718 ;;  dividend        2    2[COMMON] int 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  quotient        2    7[COMMON] int 
   721 ;;  sign            1    6[COMMON] unsigned char 
   722 ;;  counter         1    5[COMMON] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2    0[COMMON] int 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         4       0       0       0       0
   733 ;;      Locals:         4       0       0       0       0
   734 ;;      Temps:          1       0       0       0       0
   735 ;;      Totals:         9       0       0       0       0
   736 ;;Total ram usage:        9 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function ___awdiv
   747  0710                     ___awdiv:	
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   751  0710  01F6               	clrf	___awdiv@sign
   752  0711  1FF1               	btfss	___awdiv@divisor+1,7
   753  0712  2F1A               	goto	l654
   754  0713  09F0               	comf	___awdiv@divisor,f
   755  0714  09F1               	comf	___awdiv@divisor+1,f
   756  0715  0AF0               	incf	___awdiv@divisor,f
   757  0716  1903               	skipnz
   758  0717  0AF1               	incf	___awdiv@divisor+1,f
   759  0718  01F6               	clrf	___awdiv@sign
   760  0719  0AF6               	incf	___awdiv@sign,f
   761  071A                     l654:	
   762  071A  1FF3               	btfss	___awdiv@dividend+1,7
   763  071B  2F25               	goto	l660
   764  071C  09F2               	comf	___awdiv@dividend,f
   765  071D  09F3               	comf	___awdiv@dividend+1,f
   766  071E  0AF2               	incf	___awdiv@dividend,f
   767  071F  1903               	skipnz
   768  0720  0AF3               	incf	___awdiv@dividend+1,f
   769  0721  3001               	movlw	1
   770  0722  00F4               	movwf	??___awdiv
   771  0723  0874               	movf	??___awdiv,w
   772  0724  06F6               	xorwf	___awdiv@sign,f
   773  0725                     l660:	
   774  0725  01F7               	clrf	___awdiv@quotient
   775  0726  01F8               	clrf	___awdiv@quotient+1
   776  0727  0870               	movf	___awdiv@divisor,w
   777  0728  0471               	iorwf	___awdiv@divisor+1,w
   778  0729  1903               	btfsc	3,2
   779  072A  2F5C               	goto	l682
   780  072B  01F5               	clrf	___awdiv@counter
   781  072C  0AF5               	incf	___awdiv@counter,f
   782  072D                     l670:	
   783  072D  1BF1               	btfsc	___awdiv@divisor+1,7
   784  072E  2F3B               	goto	l672
   785  072F  3001               	movlw	1
   786  0730                     u345:	
   787  0730  1003               	clrc
   788  0731  0DF0               	rlf	___awdiv@divisor,f
   789  0732  0DF1               	rlf	___awdiv@divisor+1,f
   790  0733  3EFF               	addlw	-1
   791  0734  1D03               	skipz
   792  0735  2F30               	goto	u345
   793  0736  3001               	movlw	1
   794  0737  00F4               	movwf	??___awdiv
   795  0738  0874               	movf	??___awdiv,w
   796  0739  07F5               	addwf	___awdiv@counter,f
   797  073A  2F2D               	goto	l670
   798  073B                     l672:	
   799  073B  3001               	movlw	1
   800  073C                     u365:	
   801  073C  1003               	clrc
   802  073D  0DF7               	rlf	___awdiv@quotient,f
   803  073E  0DF8               	rlf	___awdiv@quotient+1,f
   804  073F  3EFF               	addlw	-1
   805  0740  1D03               	skipz
   806  0741  2F3C               	goto	u365
   807  0742  0871               	movf	___awdiv@divisor+1,w
   808  0743  0273               	subwf	___awdiv@dividend+1,w
   809  0744  1D03               	skipz
   810  0745  2F48               	goto	u375
   811  0746  0870               	movf	___awdiv@divisor,w
   812  0747  0272               	subwf	___awdiv@dividend,w
   813  0748                     u375:	
   814  0748  1C03               	skipc
   815  0749  2F51               	goto	l678
   816  074A  0870               	movf	___awdiv@divisor,w
   817  074B  02F2               	subwf	___awdiv@dividend,f
   818  074C  0871               	movf	___awdiv@divisor+1,w
   819  074D  1C03               	skipc
   820  074E  03F3               	decf	___awdiv@dividend+1,f
   821  074F  02F3               	subwf	___awdiv@dividend+1,f
   822  0750  1477               	bsf	___awdiv@quotient,0
   823  0751                     l678:	
   824  0751  3001               	movlw	1
   825  0752                     u385:	
   826  0752  1003               	clrc
   827  0753  0CF1               	rrf	___awdiv@divisor+1,f
   828  0754  0CF0               	rrf	___awdiv@divisor,f
   829  0755  3EFF               	addlw	-1
   830  0756  1D03               	skipz
   831  0757  2F52               	goto	u385
   832  0758  3001               	movlw	1
   833  0759  02F5               	subwf	___awdiv@counter,f
   834  075A  1D03               	btfss	3,2
   835  075B  2F3B               	goto	l672
   836  075C                     l682:	
   837  075C  0876               	movf	___awdiv@sign,w
   838  075D  1903               	btfsc	3,2
   839  075E  2F64               	goto	l686
   840  075F  09F7               	comf	___awdiv@quotient,f
   841  0760  09F8               	comf	___awdiv@quotient+1,f
   842  0761  0AF7               	incf	___awdiv@quotient,f
   843  0762  1903               	skipnz
   844  0763  0AF8               	incf	___awdiv@quotient+1,f
   845  0764                     l686:	
   846  0764  0878               	movf	___awdiv@quotient+1,w
   847  0765  00F1               	movwf	?___awdiv+1
   848  0766  0877               	movf	___awdiv@quotient,w
   849  0767  00F0               	movwf	?___awdiv
   850  0768  0008               	return
   851  0769                     __end_of___awdiv:	
   852  007E                     btemp	set	126	;btemp
   853  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     24      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    1083
                                              9 COMMON     4     4      0
                                              0 BANK0     24    24      0
                            ___awdiv
                            ___awmod
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Sep 16 15:48:22 2023

                      pc 0002              __CFG_CP$OFF 0000                       l21 07ED  
           ___awdiv@sign 0076                       fsr 0004              __CFG_LVP$ON 0000  
                    l710 06DC                      l702 06D6                      l712 06EA  
                    l720 0703                      l642 06BE                      l660 0725  
                    l724 070B                      l716 06F8                      l670 072D  
                    l654 071A                      l638 06AD                      l742 0792  
                    l672 073B                      l682 075C                      l686 0764  
                    l678 0751                      l698 06CF                      _RB0 0030  
                    _RB1 0031                      u500 0776                      u345 0730  
           __CFG_CPD$OFF 0000                      u275 069E                      u515 0790  
                    u365 073C                      u445 06DF                      u285 06AB  
                    u525 07EB                      u375 0748                      u295 06BC  
                    u385 0752                      u465 06F0                      u475 06F9  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000             __CFG_WRT$OFF 0000                     _main 0769  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070          __end_of___awdiv 0769            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0710          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISD 0088                    _delay 0693  
                  main@a 0020                    main@i 0036                    main@j 0034  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F0             __end_of_main 07F0                   ??_main 0079  
                 ?_delay 0070         ___awdiv@dividend 0072                   _TRISB0 0430  
                 _TRISB1 0431           __CFG_PWRTE$OFF 0000                ??___awdiv 0074  
              ??___awmod 0074                   delay@i 0070                   delay@j 0072  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 067F  
          __end_of_delay 06C5                  ??_delay 0070               __pmaintext 0769  
                ___awdiv 0710                  ___awmod 06C5                  __ptext1 0693  
                __ptext2 06C5                  __ptext3 0710         ___awmod@dividend 0072  
   end_of_initialization 07FC      start_initialization 07F0               init_fetch0 066E  
            __pdataBANK0 0038                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0070                 ?___awmod 0070           __size_of_delay 0032  
              main@F1100 0038         __size_of___awdiv 0059         __size_of___awmod 004B  
          __size_of_main 0087                 init_ram0 0672  
